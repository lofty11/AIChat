/*
   Licensed to the Apache Software Foundation (ASF) under one or more
   contributor license agreements.  See the NOTICE file distributed with
   this work for additional information regarding copyright ownership.
   The ASF licenses this file to You under the Apache License, Version 2.0
   (the "License"); you may not use this file except in compliance with
   the License.  You may obtain a copy of the License at

       http://www.apache.org/licenses/LICENSE-2.0

   Unless required by applicable law or agreed to in writing, software
   distributed under the License is distributed on an "AS IS" BASIS,
   WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
   See the License for the specific language governing permissions and
   limitations under the License.
*/
$(document).ready(function() {

    $(".click-title").mouseenter( function(    e){
        e.preventDefault();
        this.style.cursor="pointer";
    });
    $(".click-title").mousedown( function(event){
        event.preventDefault();
    });

    // Ugly code while this script is shared among several pages
    try{
        refreshHitsPerSecond(true);
    } catch(e){}
    try{
        refreshResponseTimeOverTime(true);
    } catch(e){}
    try{
        refreshResponseTimePercentiles();
    } catch(e){}
});


var responseTimePercentilesInfos = {
        data: {"result": {"minY": 0.0, "minX": 0.0, "maxY": 16026.0, "series": [{"data": [[0.0, 0.0], [0.1, 1.0], [0.2, 2.0], [0.3, 2.0], [0.4, 2.0], [0.5, 2.0], [0.6, 2.0], [0.7, 2.0], [0.8, 3.0], [0.9, 3.0], [1.0, 3.0], [1.1, 3.0], [1.2, 3.0], [1.3, 3.0], [1.4, 4.0], [1.5, 4.0], [1.6, 4.0], [1.7, 4.0], [1.8, 4.0], [1.9, 4.0], [2.0, 4.0], [2.1, 5.0], [2.2, 5.0], [2.3, 5.0], [2.4, 5.0], [2.5, 5.0], [2.6, 5.0], [2.7, 6.0], [2.8, 6.0], [2.9, 6.0], [3.0, 6.0], [3.1, 7.0], [3.2, 7.0], [3.3, 7.0], [3.4, 8.0], [3.5, 8.0], [3.6, 8.0], [3.7, 9.0], [3.8, 9.0], [3.9, 10.0], [4.0, 10.0], [4.1, 11.0], [4.2, 11.0], [4.3, 12.0], [4.4, 12.0], [4.5, 13.0], [4.6, 13.0], [4.7, 14.0], [4.8, 15.0], [4.9, 16.0], [5.0, 17.0], [5.1, 18.0], [5.2, 18.0], [5.3, 20.0], [5.4, 20.0], [5.5, 21.0], [5.6, 22.0], [5.7, 24.0], [5.8, 25.0], [5.9, 26.0], [6.0, 27.0], [6.1, 28.0], [6.2, 29.0], [6.3, 30.0], [6.4, 30.0], [6.5, 31.0], [6.6, 32.0], [6.7, 33.0], [6.8, 33.0], [6.9, 34.0], [7.0, 34.0], [7.1, 35.0], [7.2, 35.0], [7.3, 36.0], [7.4, 36.0], [7.5, 36.0], [7.6, 37.0], [7.7, 37.0], [7.8, 37.0], [7.9, 38.0], [8.0, 38.0], [8.1, 38.0], [8.2, 39.0], [8.3, 39.0], [8.4, 39.0], [8.5, 39.0], [8.6, 40.0], [8.7, 40.0], [8.8, 40.0], [8.9, 40.0], [9.0, 40.0], [9.1, 41.0], [9.2, 41.0], [9.3, 41.0], [9.4, 41.0], [9.5, 41.0], [9.6, 42.0], [9.7, 42.0], [9.8, 42.0], [9.9, 42.0], [10.0, 42.0], [10.1, 43.0], [10.2, 43.0], [10.3, 43.0], [10.4, 43.0], [10.5, 43.0], [10.6, 43.0], [10.7, 44.0], [10.8, 44.0], [10.9, 44.0], [11.0, 44.0], [11.1, 44.0], [11.2, 44.0], [11.3, 45.0], [11.4, 45.0], [11.5, 45.0], [11.6, 45.0], [11.7, 45.0], [11.8, 45.0], [11.9, 45.0], [12.0, 46.0], [12.1, 46.0], [12.2, 46.0], [12.3, 46.0], [12.4, 46.0], [12.5, 46.0], [12.6, 46.0], [12.7, 47.0], [12.8, 47.0], [12.9, 47.0], [13.0, 47.0], [13.1, 47.0], [13.2, 47.0], [13.3, 47.0], [13.4, 47.0], [13.5, 48.0], [13.6, 48.0], [13.7, 48.0], [13.8, 48.0], [13.9, 48.0], [14.0, 48.0], [14.1, 48.0], [14.2, 48.0], [14.3, 49.0], [14.4, 49.0], [14.5, 49.0], [14.6, 49.0], [14.7, 49.0], [14.8, 49.0], [14.9, 49.0], [15.0, 49.0], [15.1, 50.0], [15.2, 50.0], [15.3, 50.0], [15.4, 50.0], [15.5, 50.0], [15.6, 50.0], [15.7, 50.0], [15.8, 50.0], [15.9, 51.0], [16.0, 51.0], [16.1, 51.0], [16.2, 51.0], [16.3, 51.0], [16.4, 51.0], [16.5, 51.0], [16.6, 52.0], [16.7, 52.0], [16.8, 52.0], [16.9, 52.0], [17.0, 52.0], [17.1, 52.0], [17.2, 52.0], [17.3, 53.0], [17.4, 53.0], [17.5, 53.0], [17.6, 53.0], [17.7, 53.0], [17.8, 53.0], [17.9, 53.0], [18.0, 54.0], [18.1, 54.0], [18.2, 54.0], [18.3, 54.0], [18.4, 54.0], [18.5, 54.0], [18.6, 54.0], [18.7, 54.0], [18.8, 55.0], [18.9, 55.0], [19.0, 55.0], [19.1, 55.0], [19.2, 55.0], [19.3, 55.0], [19.4, 55.0], [19.5, 55.0], [19.6, 56.0], [19.7, 56.0], [19.8, 56.0], [19.9, 56.0], [20.0, 56.0], [20.1, 56.0], [20.2, 56.0], [20.3, 57.0], [20.4, 57.0], [20.5, 57.0], [20.6, 57.0], [20.7, 57.0], [20.8, 57.0], [20.9, 57.0], [21.0, 57.0], [21.1, 58.0], [21.2, 58.0], [21.3, 58.0], [21.4, 58.0], [21.5, 58.0], [21.6, 58.0], [21.7, 58.0], [21.8, 59.0], [21.9, 59.0], [22.0, 59.0], [22.1, 59.0], [22.2, 59.0], [22.3, 59.0], [22.4, 59.0], [22.5, 60.0], [22.6, 60.0], [22.7, 60.0], [22.8, 60.0], [22.9, 60.0], [23.0, 60.0], [23.1, 60.0], [23.2, 61.0], [23.3, 61.0], [23.4, 61.0], [23.5, 61.0], [23.6, 61.0], [23.7, 61.0], [23.8, 61.0], [23.9, 62.0], [24.0, 62.0], [24.1, 62.0], [24.2, 62.0], [24.3, 62.0], [24.4, 62.0], [24.5, 62.0], [24.6, 63.0], [24.7, 63.0], [24.8, 63.0], [24.9, 63.0], [25.0, 63.0], [25.1, 63.0], [25.2, 63.0], [25.3, 64.0], [25.4, 64.0], [25.5, 64.0], [25.6, 64.0], [25.7, 64.0], [25.8, 64.0], [25.9, 65.0], [26.0, 65.0], [26.1, 65.0], [26.2, 65.0], [26.3, 65.0], [26.4, 65.0], [26.5, 66.0], [26.6, 66.0], [26.7, 66.0], [26.8, 66.0], [26.9, 66.0], [27.0, 66.0], [27.1, 66.0], [27.2, 67.0], [27.3, 67.0], [27.4, 67.0], [27.5, 67.0], [27.6, 67.0], [27.7, 67.0], [27.8, 68.0], [27.9, 68.0], [28.0, 68.0], [28.1, 68.0], [28.2, 68.0], [28.3, 68.0], [28.4, 69.0], [28.5, 69.0], [28.6, 69.0], [28.7, 69.0], [28.8, 69.0], [28.9, 69.0], [29.0, 70.0], [29.1, 70.0], [29.2, 70.0], [29.3, 70.0], [29.4, 70.0], [29.5, 70.0], [29.6, 71.0], [29.7, 71.0], [29.8, 71.0], [29.9, 71.0], [30.0, 71.0], [30.1, 71.0], [30.2, 72.0], [30.3, 72.0], [30.4, 72.0], [30.5, 72.0], [30.6, 72.0], [30.7, 72.0], [30.8, 73.0], [30.9, 73.0], [31.0, 73.0], [31.1, 73.0], [31.2, 73.0], [31.3, 73.0], [31.4, 74.0], [31.5, 74.0], [31.6, 74.0], [31.7, 74.0], [31.8, 74.0], [31.9, 74.0], [32.0, 74.0], [32.1, 75.0], [32.2, 75.0], [32.3, 75.0], [32.4, 75.0], [32.5, 75.0], [32.6, 76.0], [32.7, 76.0], [32.8, 76.0], [32.9, 76.0], [33.0, 76.0], [33.1, 76.0], [33.2, 77.0], [33.3, 77.0], [33.4, 77.0], [33.5, 77.0], [33.6, 77.0], [33.7, 78.0], [33.8, 78.0], [33.9, 78.0], [34.0, 78.0], [34.1, 79.0], [34.2, 79.0], [34.3, 79.0], [34.4, 79.0], [34.5, 79.0], [34.6, 80.0], [34.7, 80.0], [34.8, 80.0], [34.9, 80.0], [35.0, 81.0], [35.1, 81.0], [35.2, 81.0], [35.3, 81.0], [35.4, 81.0], [35.5, 82.0], [35.6, 82.0], [35.7, 82.0], [35.8, 82.0], [35.9, 83.0], [36.0, 83.0], [36.1, 83.0], [36.2, 83.0], [36.3, 83.0], [36.4, 84.0], [36.5, 84.0], [36.6, 84.0], [36.7, 84.0], [36.8, 84.0], [36.9, 85.0], [37.0, 85.0], [37.1, 85.0], [37.2, 85.0], [37.3, 86.0], [37.4, 86.0], [37.5, 86.0], [37.6, 86.0], [37.7, 86.0], [37.8, 87.0], [37.9, 87.0], [38.0, 87.0], [38.1, 87.0], [38.2, 88.0], [38.3, 88.0], [38.4, 88.0], [38.5, 88.0], [38.6, 89.0], [38.7, 89.0], [38.8, 89.0], [38.9, 89.0], [39.0, 89.0], [39.1, 90.0], [39.2, 90.0], [39.3, 90.0], [39.4, 90.0], [39.5, 91.0], [39.6, 91.0], [39.7, 91.0], [39.8, 91.0], [39.9, 92.0], [40.0, 92.0], [40.1, 92.0], [40.2, 92.0], [40.3, 93.0], [40.4, 93.0], [40.5, 93.0], [40.6, 93.0], [40.7, 94.0], [40.8, 94.0], [40.9, 94.0], [41.0, 94.0], [41.1, 95.0], [41.2, 95.0], [41.3, 95.0], [41.4, 95.0], [41.5, 96.0], [41.6, 96.0], [41.7, 96.0], [41.8, 96.0], [41.9, 96.0], [42.0, 97.0], [42.1, 97.0], [42.2, 97.0], [42.3, 97.0], [42.4, 97.0], [42.5, 98.0], [42.6, 98.0], [42.7, 98.0], [42.8, 98.0], [42.9, 99.0], [43.0, 99.0], [43.1, 99.0], [43.2, 99.0], [43.3, 100.0], [43.4, 100.0], [43.5, 100.0], [43.6, 100.0], [43.7, 101.0], [43.8, 101.0], [43.9, 101.0], [44.0, 101.0], [44.1, 102.0], [44.2, 102.0], [44.3, 102.0], [44.4, 103.0], [44.5, 103.0], [44.6, 103.0], [44.7, 103.0], [44.8, 104.0], [44.9, 104.0], [45.0, 104.0], [45.1, 104.0], [45.2, 105.0], [45.3, 105.0], [45.4, 105.0], [45.5, 106.0], [45.6, 106.0], [45.7, 106.0], [45.8, 107.0], [45.9, 107.0], [46.0, 107.0], [46.1, 108.0], [46.2, 108.0], [46.3, 108.0], [46.4, 109.0], [46.5, 109.0], [46.6, 109.0], [46.7, 110.0], [46.8, 110.0], [46.9, 110.0], [47.0, 111.0], [47.1, 111.0], [47.2, 111.0], [47.3, 112.0], [47.4, 112.0], [47.5, 112.0], [47.6, 112.0], [47.7, 113.0], [47.8, 113.0], [47.9, 113.0], [48.0, 114.0], [48.1, 114.0], [48.2, 114.0], [48.3, 115.0], [48.4, 115.0], [48.5, 115.0], [48.6, 115.0], [48.7, 116.0], [48.8, 116.0], [48.9, 116.0], [49.0, 117.0], [49.1, 117.0], [49.2, 117.0], [49.3, 117.0], [49.4, 118.0], [49.5, 118.0], [49.6, 118.0], [49.7, 119.0], [49.8, 119.0], [49.9, 119.0], [50.0, 120.0], [50.1, 120.0], [50.2, 121.0], [50.3, 121.0], [50.4, 121.0], [50.5, 121.0], [50.6, 122.0], [50.7, 122.0], [50.8, 123.0], [50.9, 123.0], [51.0, 123.0], [51.1, 124.0], [51.2, 124.0], [51.3, 124.0], [51.4, 125.0], [51.5, 125.0], [51.6, 125.0], [51.7, 126.0], [51.8, 126.0], [51.9, 126.0], [52.0, 127.0], [52.1, 127.0], [52.2, 127.0], [52.3, 128.0], [52.4, 128.0], [52.5, 129.0], [52.6, 129.0], [52.7, 129.0], [52.8, 130.0], [52.9, 130.0], [53.0, 131.0], [53.1, 131.0], [53.2, 131.0], [53.3, 132.0], [53.4, 132.0], [53.5, 133.0], [53.6, 133.0], [53.7, 133.0], [53.8, 134.0], [53.9, 134.0], [54.0, 135.0], [54.1, 135.0], [54.2, 136.0], [54.3, 136.0], [54.4, 137.0], [54.5, 137.0], [54.6, 138.0], [54.7, 138.0], [54.8, 139.0], [54.9, 139.0], [55.0, 139.0], [55.1, 140.0], [55.2, 140.0], [55.3, 141.0], [55.4, 141.0], [55.5, 141.0], [55.6, 142.0], [55.7, 142.0], [55.8, 143.0], [55.9, 143.0], [56.0, 144.0], [56.1, 144.0], [56.2, 145.0], [56.3, 145.0], [56.4, 145.0], [56.5, 146.0], [56.6, 146.0], [56.7, 147.0], [56.8, 147.0], [56.9, 148.0], [57.0, 149.0], [57.1, 149.0], [57.2, 150.0], [57.3, 150.0], [57.4, 151.0], [57.5, 151.0], [57.6, 152.0], [57.7, 152.0], [57.8, 153.0], [57.9, 153.0], [58.0, 154.0], [58.1, 155.0], [58.2, 155.0], [58.3, 156.0], [58.4, 156.0], [58.5, 157.0], [58.6, 158.0], [58.7, 158.0], [58.8, 159.0], [58.9, 160.0], [59.0, 160.0], [59.1, 161.0], [59.2, 162.0], [59.3, 162.0], [59.4, 163.0], [59.5, 164.0], [59.6, 164.0], [59.7, 165.0], [59.8, 166.0], [59.9, 166.0], [60.0, 167.0], [60.1, 167.0], [60.2, 168.0], [60.3, 168.0], [60.4, 169.0], [60.5, 169.0], [60.6, 170.0], [60.7, 170.0], [60.8, 171.0], [60.9, 172.0], [61.0, 172.0], [61.1, 173.0], [61.2, 173.0], [61.3, 174.0], [61.4, 174.0], [61.5, 175.0], [61.6, 175.0], [61.7, 176.0], [61.8, 177.0], [61.9, 177.0], [62.0, 178.0], [62.1, 178.0], [62.2, 179.0], [62.3, 179.0], [62.4, 180.0], [62.5, 181.0], [62.6, 181.0], [62.7, 182.0], [62.8, 183.0], [62.9, 184.0], [63.0, 184.0], [63.1, 185.0], [63.2, 186.0], [63.3, 186.0], [63.4, 187.0], [63.5, 188.0], [63.6, 189.0], [63.7, 189.0], [63.8, 190.0], [63.9, 191.0], [64.0, 192.0], [64.1, 192.0], [64.2, 193.0], [64.3, 194.0], [64.4, 195.0], [64.5, 196.0], [64.6, 196.0], [64.7, 197.0], [64.8, 198.0], [64.9, 199.0], [65.0, 199.0], [65.1, 200.0], [65.2, 201.0], [65.3, 202.0], [65.4, 202.0], [65.5, 203.0], [65.6, 204.0], [65.7, 204.0], [65.8, 205.0], [65.9, 206.0], [66.0, 206.0], [66.1, 207.0], [66.2, 208.0], [66.3, 209.0], [66.4, 209.0], [66.5, 210.0], [66.6, 211.0], [66.7, 212.0], [66.8, 213.0], [66.9, 214.0], [67.0, 215.0], [67.1, 216.0], [67.2, 217.0], [67.3, 218.0], [67.4, 219.0], [67.5, 219.0], [67.6, 221.0], [67.7, 222.0], [67.8, 222.0], [67.9, 224.0], [68.0, 225.0], [68.1, 225.0], [68.2, 227.0], [68.3, 228.0], [68.4, 228.0], [68.5, 229.0], [68.6, 230.0], [68.7, 231.0], [68.8, 232.0], [68.9, 233.0], [69.0, 234.0], [69.1, 235.0], [69.2, 236.0], [69.3, 238.0], [69.4, 238.0], [69.5, 239.0], [69.6, 241.0], [69.7, 241.0], [69.8, 242.0], [69.9, 244.0], [70.0, 245.0], [70.1, 246.0], [70.2, 247.0], [70.3, 248.0], [70.4, 249.0], [70.5, 250.0], [70.6, 251.0], [70.7, 252.0], [70.8, 254.0], [70.9, 255.0], [71.0, 256.0], [71.1, 257.0], [71.2, 258.0], [71.3, 260.0], [71.4, 261.0], [71.5, 262.0], [71.6, 263.0], [71.7, 264.0], [71.8, 266.0], [71.9, 267.0], [72.0, 268.0], [72.1, 270.0], [72.2, 271.0], [72.3, 272.0], [72.4, 274.0], [72.5, 275.0], [72.6, 277.0], [72.7, 278.0], [72.8, 280.0], [72.9, 282.0], [73.0, 283.0], [73.1, 284.0], [73.2, 286.0], [73.3, 288.0], [73.4, 289.0], [73.5, 291.0], [73.6, 293.0], [73.7, 295.0], [73.8, 296.0], [73.9, 298.0], [74.0, 300.0], [74.1, 302.0], [74.2, 304.0], [74.3, 306.0], [74.4, 308.0], [74.5, 310.0], [74.6, 312.0], [74.7, 314.0], [74.8, 315.0], [74.9, 318.0], [75.0, 320.0], [75.1, 322.0], [75.2, 325.0], [75.3, 327.0], [75.4, 330.0], [75.5, 332.0], [75.6, 335.0], [75.7, 338.0], [75.8, 340.0], [75.9, 343.0], [76.0, 345.0], [76.1, 349.0], [76.2, 352.0], [76.3, 356.0], [76.4, 359.0], [76.5, 362.0], [76.6, 366.0], [76.7, 369.0], [76.8, 372.0], [76.9, 375.0], [77.0, 378.0], [77.1, 381.0], [77.2, 385.0], [77.3, 389.0], [77.4, 393.0], [77.5, 398.0], [77.6, 400.0], [77.7, 403.0], [77.8, 406.0], [77.9, 409.0], [78.0, 414.0], [78.1, 419.0], [78.2, 424.0], [78.3, 429.0], [78.4, 433.0], [78.5, 437.0], [78.6, 440.0], [78.7, 446.0], [78.8, 453.0], [78.9, 460.0], [79.0, 466.0], [79.1, 472.0], [79.2, 477.0], [79.3, 481.0], [79.4, 489.0], [79.5, 496.0], [79.6, 506.0], [79.7, 513.0], [79.8, 517.0], [79.9, 521.0], [80.0, 525.0], [80.1, 532.0], [80.2, 539.0], [80.3, 547.0], [80.4, 557.0], [80.5, 564.0], [80.6, 570.0], [80.7, 574.0], [80.8, 577.0], [80.9, 581.0], [81.0, 589.0], [81.1, 595.0], [81.2, 601.0], [81.3, 607.0], [81.4, 617.0], [81.5, 625.0], [81.6, 633.0], [81.7, 643.0], [81.8, 655.0], [81.9, 663.0], [82.0, 670.0], [82.1, 677.0], [82.2, 685.0], [82.3, 692.0], [82.4, 703.0], [82.5, 724.0], [82.6, 740.0], [82.7, 752.0], [82.8, 769.0], [82.9, 782.0], [83.0, 795.0], [83.1, 815.0], [83.2, 840.0], [83.3, 850.0], [83.4, 865.0], [83.5, 882.0], [83.6, 904.0], [83.7, 924.0], [83.8, 935.0], [83.9, 952.0], [84.0, 968.0], [84.1, 1009.0], [84.2, 1117.0], [84.3, 1169.0], [84.4, 1205.0], [84.5, 1235.0], [84.6, 1246.0], [84.7, 1261.0], [84.8, 1271.0], [84.9, 1284.0], [85.0, 1312.0], [85.1, 1331.0], [85.2, 1354.0], [85.3, 1380.0], [85.4, 1398.0], [85.5, 1408.0], [85.6, 1429.0], [85.7, 1463.0], [85.8, 1503.0], [85.9, 1524.0], [86.0, 1537.0], [86.1, 1545.0], [86.2, 1553.0], [86.3, 1563.0], [86.4, 1574.0], [86.5, 1584.0], [86.6, 1596.0], [86.7, 1608.0], [86.8, 1624.0], [86.9, 1653.0], [87.0, 1736.0], [87.1, 1851.0], [87.2, 1884.0], [87.3, 1912.0], [87.4, 1930.0], [87.5, 1960.0], [87.6, 2007.0], [87.7, 2030.0], [87.8, 2057.0], [87.9, 2075.0], [88.0, 2086.0], [88.1, 2095.0], [88.2, 2107.0], [88.3, 2118.0], [88.4, 2141.0], [88.5, 2159.0], [88.6, 2182.0], [88.7, 2205.0], [88.8, 2224.0], [88.9, 2239.0], [89.0, 2254.0], [89.1, 2264.0], [89.2, 2278.0], [89.3, 2294.0], [89.4, 2317.0], [89.5, 2345.0], [89.6, 2374.0], [89.7, 2405.0], [89.8, 2437.0], [89.9, 2479.0], [90.0, 2533.0], [90.1, 2569.0], [90.2, 2594.0], [90.3, 2625.0], [90.4, 2647.0], [90.5, 2685.0], [90.6, 2728.0], [90.7, 2763.0], [90.8, 2784.0], [90.9, 2802.0], [91.0, 2815.0], [91.1, 2857.0], [91.2, 2942.0], [91.3, 3016.0], [91.4, 3050.0], [91.5, 3091.0], [91.6, 3126.0], [91.7, 3193.0], [91.8, 3245.0], [91.9, 3271.0], [92.0, 3301.0], [92.1, 3347.0], [92.2, 3404.0], [92.3, 3460.0], [92.4, 3550.0], [92.5, 3605.0], [92.6, 3626.0], [92.7, 3652.0], [92.8, 3674.0], [92.9, 3734.0], [93.0, 3921.0], [93.1, 4013.0], [93.2, 4060.0], [93.3, 4110.0], [93.4, 4154.0], [93.5, 4521.0], [93.6, 4582.0], [93.7, 4598.0], [93.8, 4643.0], [93.9, 4712.0], [94.0, 4766.0], [94.1, 4808.0], [94.2, 4876.0], [94.3, 4925.0], [94.4, 4960.0], [94.5, 5069.0], [94.6, 5167.0], [94.7, 5205.0], [94.8, 5268.0], [94.9, 5383.0], [95.0, 5562.0], [95.1, 5613.0], [95.2, 5953.0], [95.3, 6037.0], [95.4, 6081.0], [95.5, 6105.0], [95.6, 6113.0], [95.7, 6136.0], [95.8, 6166.0], [95.9, 6194.0], [96.0, 6206.0], [96.1, 6230.0], [96.2, 6256.0], [96.3, 6271.0], [96.4, 6285.0], [96.5, 6307.0], [96.6, 6345.0], [96.7, 6391.0], [96.8, 6427.0], [96.9, 6472.0], [97.0, 6622.0], [97.1, 7051.0], [97.2, 7115.0], [97.3, 7178.0], [97.4, 7241.0], [97.5, 7275.0], [97.6, 7367.0], [97.7, 7420.0], [97.8, 7924.0], [97.9, 7956.0], [98.0, 8025.0], [98.1, 8045.0], [98.2, 8125.0], [98.3, 8149.0], [98.4, 8231.0], [98.5, 8462.0], [98.6, 8510.0], [98.7, 8649.0], [98.8, 8813.0], [98.9, 8847.0], [99.0, 8880.0], [99.1, 8943.0], [99.2, 9711.0], [99.3, 9850.0], [99.4, 10319.0], [99.5, 10735.0], [99.6, 11151.0], [99.7, 11542.0], [99.8, 12343.0], [99.9, 12429.0]], "isOverall": false, "label": "无redis", "isController": false}, {"data": [[0.0, 0.0], [0.1, 1.0], [0.2, 1.0], [0.3, 2.0], [0.4, 2.0], [0.5, 2.0], [0.6, 2.0], [0.7, 2.0], [0.8, 2.0], [0.9, 2.0], [1.0, 2.0], [1.1, 2.0], [1.2, 3.0], [1.3, 3.0], [1.4, 3.0], [1.5, 3.0], [1.6, 3.0], [1.7, 3.0], [1.8, 3.0], [1.9, 3.0], [2.0, 3.0], [2.1, 3.0], [2.2, 4.0], [2.3, 4.0], [2.4, 4.0], [2.5, 4.0], [2.6, 4.0], [2.7, 4.0], [2.8, 4.0], [2.9, 5.0], [3.0, 5.0], [3.1, 5.0], [3.2, 5.0], [3.3, 5.0], [3.4, 6.0], [3.5, 6.0], [3.6, 6.0], [3.7, 6.0], [3.8, 7.0], [3.9, 7.0], [4.0, 7.0], [4.1, 8.0], [4.2, 8.0], [4.3, 9.0], [4.4, 9.0], [4.5, 9.0], [4.6, 10.0], [4.7, 10.0], [4.8, 11.0], [4.9, 12.0], [5.0, 13.0], [5.1, 14.0], [5.2, 15.0], [5.3, 16.0], [5.4, 16.0], [5.5, 18.0], [5.6, 19.0], [5.7, 20.0], [5.8, 21.0], [5.9, 23.0], [6.0, 25.0], [6.1, 26.0], [6.2, 27.0], [6.3, 29.0], [6.4, 30.0], [6.5, 31.0], [6.6, 32.0], [6.7, 33.0], [6.8, 34.0], [6.9, 35.0], [7.0, 36.0], [7.1, 37.0], [7.2, 38.0], [7.3, 39.0], [7.4, 40.0], [7.5, 40.0], [7.6, 41.0], [7.7, 41.0], [7.8, 42.0], [7.9, 42.0], [8.0, 43.0], [8.1, 44.0], [8.2, 44.0], [8.3, 44.0], [8.4, 45.0], [8.5, 45.0], [8.6, 45.0], [8.7, 46.0], [8.8, 46.0], [8.9, 46.0], [9.0, 46.0], [9.1, 47.0], [9.2, 47.0], [9.3, 47.0], [9.4, 47.0], [9.5, 48.0], [9.6, 48.0], [9.7, 48.0], [9.8, 48.0], [9.9, 49.0], [10.0, 49.0], [10.1, 49.0], [10.2, 49.0], [10.3, 50.0], [10.4, 50.0], [10.5, 50.0], [10.6, 50.0], [10.7, 51.0], [10.8, 51.0], [10.9, 51.0], [11.0, 51.0], [11.1, 52.0], [11.2, 52.0], [11.3, 52.0], [11.4, 52.0], [11.5, 53.0], [11.6, 53.0], [11.7, 53.0], [11.8, 53.0], [11.9, 54.0], [12.0, 54.0], [12.1, 54.0], [12.2, 54.0], [12.3, 55.0], [12.4, 55.0], [12.5, 55.0], [12.6, 56.0], [12.7, 56.0], [12.8, 56.0], [12.9, 57.0], [13.0, 57.0], [13.1, 57.0], [13.2, 58.0], [13.3, 58.0], [13.4, 58.0], [13.5, 58.0], [13.6, 59.0], [13.7, 59.0], [13.8, 59.0], [13.9, 60.0], [14.0, 60.0], [14.1, 60.0], [14.2, 60.0], [14.3, 61.0], [14.4, 61.0], [14.5, 61.0], [14.6, 62.0], [14.7, 62.0], [14.8, 62.0], [14.9, 62.0], [15.0, 63.0], [15.1, 63.0], [15.2, 63.0], [15.3, 63.0], [15.4, 64.0], [15.5, 64.0], [15.6, 64.0], [15.7, 64.0], [15.8, 64.0], [15.9, 65.0], [16.0, 65.0], [16.1, 65.0], [16.2, 65.0], [16.3, 65.0], [16.4, 66.0], [16.5, 66.0], [16.6, 66.0], [16.7, 66.0], [16.8, 66.0], [16.9, 66.0], [17.0, 67.0], [17.1, 67.0], [17.2, 67.0], [17.3, 67.0], [17.4, 67.0], [17.5, 68.0], [17.6, 68.0], [17.7, 68.0], [17.8, 68.0], [17.9, 68.0], [18.0, 69.0], [18.1, 69.0], [18.2, 69.0], [18.3, 69.0], [18.4, 69.0], [18.5, 69.0], [18.6, 70.0], [18.7, 70.0], [18.8, 70.0], [18.9, 70.0], [19.0, 70.0], [19.1, 71.0], [19.2, 71.0], [19.3, 71.0], [19.4, 71.0], [19.5, 71.0], [19.6, 71.0], [19.7, 72.0], [19.8, 72.0], [19.9, 72.0], [20.0, 72.0], [20.1, 72.0], [20.2, 72.0], [20.3, 73.0], [20.4, 73.0], [20.5, 73.0], [20.6, 73.0], [20.7, 73.0], [20.8, 73.0], [20.9, 73.0], [21.0, 74.0], [21.1, 74.0], [21.2, 74.0], [21.3, 74.0], [21.4, 74.0], [21.5, 74.0], [21.6, 75.0], [21.7, 75.0], [21.8, 75.0], [21.9, 75.0], [22.0, 75.0], [22.1, 76.0], [22.2, 76.0], [22.3, 76.0], [22.4, 76.0], [22.5, 76.0], [22.6, 76.0], [22.7, 77.0], [22.8, 77.0], [22.9, 77.0], [23.0, 77.0], [23.1, 77.0], [23.2, 77.0], [23.3, 78.0], [23.4, 78.0], [23.5, 78.0], [23.6, 78.0], [23.7, 78.0], [23.8, 79.0], [23.9, 79.0], [24.0, 79.0], [24.1, 79.0], [24.2, 79.0], [24.3, 79.0], [24.4, 80.0], [24.5, 80.0], [24.6, 80.0], [24.7, 80.0], [24.8, 80.0], [24.9, 81.0], [25.0, 81.0], [25.1, 81.0], [25.2, 81.0], [25.3, 81.0], [25.4, 81.0], [25.5, 82.0], [25.6, 82.0], [25.7, 82.0], [25.8, 82.0], [25.9, 82.0], [26.0, 82.0], [26.1, 83.0], [26.2, 83.0], [26.3, 83.0], [26.4, 83.0], [26.5, 83.0], [26.6, 84.0], [26.7, 84.0], [26.8, 84.0], [26.9, 84.0], [27.0, 84.0], [27.1, 84.0], [27.2, 84.0], [27.3, 85.0], [27.4, 85.0], [27.5, 85.0], [27.6, 85.0], [27.7, 85.0], [27.8, 85.0], [27.9, 86.0], [28.0, 86.0], [28.1, 86.0], [28.2, 86.0], [28.3, 86.0], [28.4, 86.0], [28.5, 87.0], [28.6, 87.0], [28.7, 87.0], [28.8, 87.0], [28.9, 87.0], [29.0, 87.0], [29.1, 88.0], [29.2, 88.0], [29.3, 88.0], [29.4, 88.0], [29.5, 88.0], [29.6, 88.0], [29.7, 88.0], [29.8, 89.0], [29.9, 89.0], [30.0, 89.0], [30.1, 89.0], [30.2, 89.0], [30.3, 89.0], [30.4, 90.0], [30.5, 90.0], [30.6, 90.0], [30.7, 90.0], [30.8, 90.0], [30.9, 90.0], [31.0, 90.0], [31.1, 91.0], [31.2, 91.0], [31.3, 91.0], [31.4, 91.0], [31.5, 91.0], [31.6, 91.0], [31.7, 92.0], [31.8, 92.0], [31.9, 92.0], [32.0, 92.0], [32.1, 92.0], [32.2, 92.0], [32.3, 93.0], [32.4, 93.0], [32.5, 93.0], [32.6, 93.0], [32.7, 93.0], [32.8, 93.0], [32.9, 94.0], [33.0, 94.0], [33.1, 94.0], [33.2, 94.0], [33.3, 94.0], [33.4, 94.0], [33.5, 95.0], [33.6, 95.0], [33.7, 95.0], [33.8, 95.0], [33.9, 95.0], [34.0, 95.0], [34.1, 95.0], [34.2, 96.0], [34.3, 96.0], [34.4, 96.0], [34.5, 96.0], [34.6, 96.0], [34.7, 96.0], [34.8, 97.0], [34.9, 97.0], [35.0, 97.0], [35.1, 97.0], [35.2, 97.0], [35.3, 98.0], [35.4, 98.0], [35.5, 98.0], [35.6, 98.0], [35.7, 98.0], [35.8, 98.0], [35.9, 99.0], [36.0, 99.0], [36.1, 99.0], [36.2, 99.0], [36.3, 99.0], [36.4, 100.0], [36.5, 100.0], [36.6, 100.0], [36.7, 100.0], [36.8, 100.0], [36.9, 100.0], [37.0, 101.0], [37.1, 101.0], [37.2, 101.0], [37.3, 101.0], [37.4, 101.0], [37.5, 102.0], [37.6, 102.0], [37.7, 102.0], [37.8, 102.0], [37.9, 102.0], [38.0, 103.0], [38.1, 103.0], [38.2, 103.0], [38.3, 103.0], [38.4, 103.0], [38.5, 103.0], [38.6, 104.0], [38.7, 104.0], [38.8, 104.0], [38.9, 104.0], [39.0, 104.0], [39.1, 104.0], [39.2, 105.0], [39.3, 105.0], [39.4, 105.0], [39.5, 105.0], [39.6, 105.0], [39.7, 106.0], [39.8, 106.0], [39.9, 106.0], [40.0, 106.0], [40.1, 106.0], [40.2, 107.0], [40.3, 107.0], [40.4, 107.0], [40.5, 107.0], [40.6, 107.0], [40.7, 108.0], [40.8, 108.0], [40.9, 108.0], [41.0, 108.0], [41.1, 108.0], [41.2, 109.0], [41.3, 109.0], [41.4, 109.0], [41.5, 109.0], [41.6, 109.0], [41.7, 110.0], [41.8, 110.0], [41.9, 110.0], [42.0, 110.0], [42.1, 110.0], [42.2, 110.0], [42.3, 111.0], [42.4, 111.0], [42.5, 111.0], [42.6, 111.0], [42.7, 111.0], [42.8, 112.0], [42.9, 112.0], [43.0, 112.0], [43.1, 112.0], [43.2, 112.0], [43.3, 113.0], [43.4, 113.0], [43.5, 113.0], [43.6, 113.0], [43.7, 113.0], [43.8, 114.0], [43.9, 114.0], [44.0, 114.0], [44.1, 114.0], [44.2, 115.0], [44.3, 115.0], [44.4, 115.0], [44.5, 115.0], [44.6, 115.0], [44.7, 115.0], [44.8, 116.0], [44.9, 116.0], [45.0, 116.0], [45.1, 116.0], [45.2, 116.0], [45.3, 116.0], [45.4, 117.0], [45.5, 117.0], [45.6, 117.0], [45.7, 117.0], [45.8, 117.0], [45.9, 118.0], [46.0, 118.0], [46.1, 118.0], [46.2, 118.0], [46.3, 118.0], [46.4, 119.0], [46.5, 119.0], [46.6, 119.0], [46.7, 119.0], [46.8, 119.0], [46.9, 120.0], [47.0, 120.0], [47.1, 120.0], [47.2, 120.0], [47.3, 120.0], [47.4, 120.0], [47.5, 121.0], [47.6, 121.0], [47.7, 121.0], [47.8, 121.0], [47.9, 121.0], [48.0, 122.0], [48.1, 122.0], [48.2, 122.0], [48.3, 122.0], [48.4, 122.0], [48.5, 123.0], [48.6, 123.0], [48.7, 123.0], [48.8, 123.0], [48.9, 124.0], [49.0, 124.0], [49.1, 124.0], [49.2, 124.0], [49.3, 124.0], [49.4, 125.0], [49.5, 125.0], [49.6, 125.0], [49.7, 125.0], [49.8, 125.0], [49.9, 126.0], [50.0, 126.0], [50.1, 126.0], [50.2, 126.0], [50.3, 126.0], [50.4, 127.0], [50.5, 127.0], [50.6, 127.0], [50.7, 127.0], [50.8, 127.0], [50.9, 128.0], [51.0, 128.0], [51.1, 128.0], [51.2, 128.0], [51.3, 128.0], [51.4, 128.0], [51.5, 129.0], [51.6, 129.0], [51.7, 129.0], [51.8, 129.0], [51.9, 129.0], [52.0, 130.0], [52.1, 130.0], [52.2, 130.0], [52.3, 130.0], [52.4, 130.0], [52.5, 131.0], [52.6, 131.0], [52.7, 131.0], [52.8, 131.0], [52.9, 131.0], [53.0, 131.0], [53.1, 132.0], [53.2, 132.0], [53.3, 132.0], [53.4, 132.0], [53.5, 133.0], [53.6, 133.0], [53.7, 133.0], [53.8, 133.0], [53.9, 133.0], [54.0, 134.0], [54.1, 134.0], [54.2, 134.0], [54.3, 134.0], [54.4, 134.0], [54.5, 135.0], [54.6, 135.0], [54.7, 135.0], [54.8, 135.0], [54.9, 135.0], [55.0, 135.0], [55.1, 136.0], [55.2, 136.0], [55.3, 136.0], [55.4, 136.0], [55.5, 136.0], [55.6, 137.0], [55.7, 137.0], [55.8, 137.0], [55.9, 137.0], [56.0, 137.0], [56.1, 138.0], [56.2, 138.0], [56.3, 138.0], [56.4, 138.0], [56.5, 138.0], [56.6, 139.0], [56.7, 139.0], [56.8, 139.0], [56.9, 139.0], [57.0, 139.0], [57.1, 140.0], [57.2, 140.0], [57.3, 140.0], [57.4, 140.0], [57.5, 141.0], [57.6, 141.0], [57.7, 141.0], [57.8, 141.0], [57.9, 142.0], [58.0, 142.0], [58.1, 142.0], [58.2, 142.0], [58.3, 143.0], [58.4, 143.0], [58.5, 143.0], [58.6, 143.0], [58.7, 144.0], [58.8, 144.0], [58.9, 144.0], [59.0, 144.0], [59.1, 144.0], [59.2, 145.0], [59.3, 145.0], [59.4, 145.0], [59.5, 145.0], [59.6, 146.0], [59.7, 146.0], [59.8, 146.0], [59.9, 147.0], [60.0, 147.0], [60.1, 147.0], [60.2, 148.0], [60.3, 148.0], [60.4, 148.0], [60.5, 148.0], [60.6, 149.0], [60.7, 149.0], [60.8, 149.0], [60.9, 150.0], [61.0, 150.0], [61.1, 150.0], [61.2, 151.0], [61.3, 151.0], [61.4, 151.0], [61.5, 152.0], [61.6, 152.0], [61.7, 153.0], [61.8, 153.0], [61.9, 153.0], [62.0, 153.0], [62.1, 154.0], [62.2, 154.0], [62.3, 154.0], [62.4, 155.0], [62.5, 155.0], [62.6, 155.0], [62.7, 156.0], [62.8, 156.0], [62.9, 156.0], [63.0, 157.0], [63.1, 157.0], [63.2, 157.0], [63.3, 158.0], [63.4, 158.0], [63.5, 158.0], [63.6, 159.0], [63.7, 159.0], [63.8, 159.0], [63.9, 160.0], [64.0, 160.0], [64.1, 161.0], [64.2, 161.0], [64.3, 162.0], [64.4, 162.0], [64.5, 162.0], [64.6, 163.0], [64.7, 163.0], [64.8, 164.0], [64.9, 164.0], [65.0, 164.0], [65.1, 165.0], [65.2, 165.0], [65.3, 166.0], [65.4, 166.0], [65.5, 167.0], [65.6, 167.0], [65.7, 167.0], [65.8, 168.0], [65.9, 168.0], [66.0, 169.0], [66.1, 170.0], [66.2, 170.0], [66.3, 170.0], [66.4, 171.0], [66.5, 171.0], [66.6, 172.0], [66.7, 172.0], [66.8, 173.0], [66.9, 173.0], [67.0, 174.0], [67.1, 174.0], [67.2, 175.0], [67.3, 175.0], [67.4, 176.0], [67.5, 176.0], [67.6, 177.0], [67.7, 177.0], [67.8, 178.0], [67.9, 178.0], [68.0, 179.0], [68.1, 180.0], [68.2, 180.0], [68.3, 180.0], [68.4, 181.0], [68.5, 182.0], [68.6, 182.0], [68.7, 183.0], [68.8, 183.0], [68.9, 184.0], [69.0, 185.0], [69.1, 185.0], [69.2, 186.0], [69.3, 186.0], [69.4, 187.0], [69.5, 187.0], [69.6, 188.0], [69.7, 189.0], [69.8, 189.0], [69.9, 190.0], [70.0, 190.0], [70.1, 191.0], [70.2, 192.0], [70.3, 192.0], [70.4, 193.0], [70.5, 194.0], [70.6, 194.0], [70.7, 195.0], [70.8, 195.0], [70.9, 196.0], [71.0, 196.0], [71.1, 197.0], [71.2, 198.0], [71.3, 198.0], [71.4, 199.0], [71.5, 199.0], [71.6, 200.0], [71.7, 201.0], [71.8, 201.0], [71.9, 202.0], [72.0, 203.0], [72.1, 204.0], [72.2, 205.0], [72.3, 205.0], [72.4, 206.0], [72.5, 207.0], [72.6, 208.0], [72.7, 209.0], [72.8, 211.0], [72.9, 211.0], [73.0, 212.0], [73.1, 213.0], [73.2, 214.0], [73.3, 215.0], [73.4, 216.0], [73.5, 217.0], [73.6, 218.0], [73.7, 219.0], [73.8, 219.0], [73.9, 221.0], [74.0, 222.0], [74.1, 223.0], [74.2, 224.0], [74.3, 225.0], [74.4, 226.0], [74.5, 227.0], [74.6, 229.0], [74.7, 230.0], [74.8, 231.0], [74.9, 232.0], [75.0, 233.0], [75.1, 234.0], [75.2, 235.0], [75.3, 236.0], [75.4, 237.0], [75.5, 238.0], [75.6, 239.0], [75.7, 241.0], [75.8, 242.0], [75.9, 244.0], [76.0, 245.0], [76.1, 247.0], [76.2, 249.0], [76.3, 250.0], [76.4, 252.0], [76.5, 254.0], [76.6, 256.0], [76.7, 258.0], [76.8, 260.0], [76.9, 263.0], [77.0, 265.0], [77.1, 267.0], [77.2, 269.0], [77.3, 271.0], [77.4, 274.0], [77.5, 277.0], [77.6, 279.0], [77.7, 281.0], [77.8, 283.0], [77.9, 285.0], [78.0, 287.0], [78.1, 289.0], [78.2, 292.0], [78.3, 294.0], [78.4, 296.0], [78.5, 298.0], [78.6, 301.0], [78.7, 304.0], [78.8, 306.0], [78.9, 309.0], [79.0, 313.0], [79.1, 317.0], [79.2, 320.0], [79.3, 323.0], [79.4, 326.0], [79.5, 329.0], [79.6, 332.0], [79.7, 335.0], [79.8, 337.0], [79.9, 340.0], [80.0, 343.0], [80.1, 346.0], [80.2, 349.0], [80.3, 352.0], [80.4, 356.0], [80.5, 360.0], [80.6, 363.0], [80.7, 366.0], [80.8, 370.0], [80.9, 374.0], [81.0, 379.0], [81.1, 385.0], [81.2, 390.0], [81.3, 395.0], [81.4, 400.0], [81.5, 404.0], [81.6, 407.0], [81.7, 410.0], [81.8, 415.0], [81.9, 422.0], [82.0, 429.0], [82.1, 438.0], [82.2, 448.0], [82.3, 460.0], [82.4, 471.0], [82.5, 480.0], [82.6, 490.0], [82.7, 503.0], [82.8, 515.0], [82.9, 525.0], [83.0, 538.0], [83.1, 558.0], [83.2, 570.0], [83.3, 584.0], [83.4, 602.0], [83.5, 619.0], [83.6, 639.0], [83.7, 682.0], [83.8, 717.0], [83.9, 741.0], [84.0, 764.0], [84.1, 802.0], [84.2, 846.0], [84.3, 907.0], [84.4, 946.0], [84.5, 961.0], [84.6, 1022.0], [84.7, 1119.0], [84.8, 1171.0], [84.9, 1201.0], [85.0, 1225.0], [85.1, 1348.0], [85.2, 1439.0], [85.3, 1503.0], [85.4, 1576.0], [85.5, 1610.0], [85.6, 1695.0], [85.7, 1703.0], [85.8, 1719.0], [85.9, 1760.0], [86.0, 1784.0], [86.1, 1798.0], [86.2, 1810.0], [86.3, 1835.0], [86.4, 1930.0], [86.5, 1939.0], [86.6, 1949.0], [86.7, 1992.0], [86.8, 2062.0], [86.9, 2085.0], [87.0, 2107.0], [87.1, 2118.0], [87.2, 2127.0], [87.3, 2141.0], [87.4, 2167.0], [87.5, 2258.0], [87.6, 2307.0], [87.7, 2352.0], [87.8, 2391.0], [87.9, 2409.0], [88.0, 2425.0], [88.1, 2435.0], [88.2, 2446.0], [88.3, 2459.0], [88.4, 2507.0], [88.5, 2537.0], [88.6, 2549.0], [88.7, 2575.0], [88.8, 2618.0], [88.9, 2677.0], [89.0, 2709.0], [89.1, 2750.0], [89.2, 2931.0], [89.3, 2990.0], [89.4, 3041.0], [89.5, 3064.0], [89.6, 3082.0], [89.7, 3170.0], [89.8, 3203.0], [89.9, 3215.0], [90.0, 3225.0], [90.1, 3252.0], [90.2, 3281.0], [90.3, 3309.0], [90.4, 3323.0], [90.5, 3340.0], [90.6, 3362.0], [90.7, 3391.0], [90.8, 3411.0], [90.9, 3433.0], [91.0, 3461.0], [91.1, 3526.0], [91.2, 3557.0], [91.3, 3566.0], [91.4, 3572.0], [91.5, 3580.0], [91.6, 3589.0], [91.7, 3622.0], [91.8, 3821.0], [91.9, 3921.0], [92.0, 3940.0], [92.1, 3968.0], [92.2, 3986.0], [92.3, 4021.0], [92.4, 4216.0], [92.5, 4240.0], [92.6, 4574.0], [92.7, 4591.0], [92.8, 4633.0], [92.9, 4765.0], [93.0, 4784.0], [93.1, 4804.0], [93.2, 5110.0], [93.3, 5158.0], [93.4, 5309.0], [93.5, 5336.0], [93.6, 5340.0], [93.7, 5350.0], [93.8, 5543.0], [93.9, 5583.0], [94.0, 5603.0], [94.1, 5612.0], [94.2, 5621.0], [94.3, 5633.0], [94.4, 5662.0], [94.5, 5679.0], [94.6, 5696.0], [94.7, 5719.0], [94.8, 5759.0], [94.9, 5820.0], [95.0, 6024.0], [95.1, 6070.0], [95.2, 6089.0], [95.3, 6103.0], [95.4, 6124.0], [95.5, 6144.0], [95.6, 6191.0], [95.7, 6221.0], [95.8, 6289.0], [95.9, 6308.0], [96.0, 6397.0], [96.1, 6505.0], [96.2, 6531.0], [96.3, 6674.0], [96.4, 7153.0], [96.5, 7175.0], [96.6, 7186.0], [96.7, 7369.0], [96.8, 7417.0], [96.9, 7451.0], [97.0, 7539.0], [97.1, 8074.0], [97.2, 8111.0], [97.3, 8130.0], [97.4, 8155.0], [97.5, 8165.0], [97.6, 8392.0], [97.7, 8398.0], [97.8, 8404.0], [97.9, 8478.0], [98.0, 8504.0], [98.1, 8569.0], [98.2, 8612.0], [98.3, 8710.0], [98.4, 8971.0], [98.5, 9234.0], [98.6, 9947.0], [98.7, 10512.0], [98.8, 11393.0], [98.9, 11414.0], [99.0, 11431.0], [99.1, 11817.0], [99.2, 11933.0], [99.3, 12252.0], [99.4, 13867.0], [99.5, 13890.0], [99.6, 13894.0], [99.7, 15856.0], [99.8, 15883.0], [99.9, 15911.0]], "isOverall": false, "label": "有redis", "isController": false}], "supportsControllersDiscrimination": true, "maxX": 100.0, "title": "Response Time Percentiles"}},
        getOptions: function() {
            return {
                series: {
                    points: { show: false }
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendResponseTimePercentiles'
                },
                xaxis: {
                    tickDecimals: 1,
                    axisLabel: "Percentiles",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Percentile value in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s : %x.2 percentile was %y ms"
                },
                selection: { mode: "xy" },
            };
        },
        createGraph: function() {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesResponseTimePercentiles"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotResponseTimesPercentiles"), dataset, options);
            // setup overview
            $.plot($("#overviewResponseTimesPercentiles"), dataset, prepareOverviewOptions(options));
        }
};

/**
 * @param elementId Id of element where we display message
 */
function setEmptyGraph(elementId) {
    $(function() {
        $(elementId).text("No graph series with filter="+seriesFilter);
    });
}

// Response times percentiles
function refreshResponseTimePercentiles() {
    var infos = responseTimePercentilesInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyResponseTimePercentiles");
        return;
    }
    if (isGraph($("#flotResponseTimesPercentiles"))){
        infos.createGraph();
    } else {
        var choiceContainer = $("#choicesResponseTimePercentiles");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotResponseTimesPercentiles", "#overviewResponseTimesPercentiles");
        $('#bodyResponseTimePercentiles .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
}

var responseTimeDistributionInfos = {
        data: {"result": {"minY": 1.0, "minX": 0.0, "maxY": 39617.0, "series": [{"data": [[0.0, 39617.0], [100.0, 19912.0], [200.0, 8207.0], [300.0, 3301.0], [400.0, 1803.0], [500.0, 1502.0], [600.0, 1091.0], [700.0, 608.0], [800.0, 501.0], [900.0, 458.0], [1000.0, 85.0], [1100.0, 193.0], [1200.0, 538.0], [1300.0, 405.0], [1400.0, 342.0], [1500.0, 770.0], [1600.0, 316.0], [1700.0, 67.0], [1800.0, 186.0], [1900.0, 304.0], [2000.0, 508.0], [2100.0, 494.0], [2200.0, 598.0], [2300.0, 314.0], [2400.0, 239.0], [2500.0, 256.0], [2600.0, 299.0], [2800.0, 252.0], [2700.0, 316.0], [2900.0, 98.0], [3000.0, 240.0], [3100.0, 162.0], [3200.0, 264.0], [3300.0, 179.0], [3400.0, 142.0], [3500.0, 116.0], [3600.0, 350.0], [3700.0, 50.0], [3800.0, 53.0], [3900.0, 107.0], [4000.0, 184.0], [4300.0, 1.0], [4100.0, 158.0], [4200.0, 1.0], [4500.0, 196.0], [4600.0, 147.0], [4400.0, 34.0], [4700.0, 200.0], [4800.0, 174.0], [4900.0, 168.0], [5000.0, 66.0], [5100.0, 148.0], [5300.0, 56.0], [5200.0, 140.0], [5400.0, 59.0], [5500.0, 90.0], [5600.0, 96.0], [5700.0, 14.0], [5800.0, 6.0], [5900.0, 54.0], [6100.0, 412.0], [6000.0, 204.0], [6300.0, 245.0], [6200.0, 502.0], [6400.0, 159.0], [6500.0, 66.0], [6600.0, 16.0], [6700.0, 1.0], [6900.0, 29.0], [7000.0, 114.0], [7100.0, 155.0], [7200.0, 171.0], [7300.0, 86.0], [7400.0, 148.0], [7500.0, 3.0], [7900.0, 175.0], [8000.0, 193.0], [8100.0, 168.0], [8200.0, 95.0], [8300.0, 11.0], [8400.0, 101.0], [8700.0, 49.0], [8500.0, 62.0], [8600.0, 68.0], [8800.0, 240.0], [8900.0, 92.0], [9000.0, 20.0], [9100.0, 11.0], [9200.0, 5.0], [9700.0, 73.0], [9600.0, 2.0], [9300.0, 5.0], [9800.0, 39.0], [9900.0, 25.0], [10000.0, 8.0], [10300.0, 80.0], [10400.0, 2.0], [10500.0, 27.0], [10600.0, 17.0], [10700.0, 13.0], [10800.0, 25.0], [10900.0, 3.0], [11000.0, 8.0], [11100.0, 94.0], [11200.0, 19.0], [11400.0, 4.0], [11500.0, 27.0], [11600.0, 3.0], [11700.0, 1.0], [11300.0, 9.0], [12200.0, 34.0], [12700.0, 1.0], [12300.0, 100.0], [12400.0, 73.0], [12500.0, 28.0], [12600.0, 6.0], [12800.0, 8.0], [12900.0, 5.0], [13100.0, 1.0], [13000.0, 1.0], [14100.0, 1.0]], "isOverall": false, "label": "无redis", "isController": false}, {"data": [[0.0, 32512.0], [100.0, 31414.0], [200.0, 6289.0], [300.0, 2539.0], [400.0, 1153.0], [500.0, 639.0], [600.0, 311.0], [700.0, 319.0], [800.0, 168.0], [900.0, 259.0], [1000.0, 93.0], [1100.0, 197.0], [1200.0, 156.0], [1300.0, 39.0], [1400.0, 162.0], [1500.0, 175.0], [1600.0, 160.0], [1700.0, 397.0], [1800.0, 215.0], [1900.0, 316.0], [2000.0, 211.0], [2100.0, 457.0], [2200.0, 110.0], [2300.0, 249.0], [2400.0, 479.0], [2500.0, 344.0], [2600.0, 140.0], [2700.0, 211.0], [2800.0, 15.0], [2900.0, 138.0], [3000.0, 249.0], [3100.0, 131.0], [3300.0, 420.0], [3200.0, 443.0], [3400.0, 307.0], [3500.0, 519.0], [3600.0, 91.0], [3700.0, 28.0], [3800.0, 49.0], [3900.0, 366.0], [4000.0, 61.0], [4100.0, 55.0], [4200.0, 143.0], [4500.0, 174.0], [4600.0, 71.0], [4700.0, 224.0], [4800.0, 91.0], [4900.0, 21.0], [5000.0, 3.0], [5100.0, 147.0], [5200.0, 19.0], [5300.0, 300.0], [5500.0, 216.0], [5600.0, 570.0], [5400.0, 19.0], [5700.0, 222.0], [5800.0, 75.0], [6100.0, 310.0], [6000.0, 257.0], [5900.0, 32.0], [6200.0, 229.0], [6300.0, 121.0], [6400.0, 43.0], [6500.0, 168.0], [6600.0, 92.0], [6700.0, 16.0], [7100.0, 241.0], [7400.0, 201.0], [7200.0, 39.0], [7300.0, 50.0], [7500.0, 36.0], [7900.0, 47.0], [7800.0, 14.0], [8000.0, 67.0], [8100.0, 363.0], [8500.0, 172.0], [8400.0, 218.0], [8200.0, 4.0], [8600.0, 87.0], [8300.0, 170.0], [8700.0, 92.0], [8900.0, 70.0], [9000.0, 26.0], [9100.0, 1.0], [9200.0, 13.0], [8800.0, 3.0], [9300.0, 48.0], [9900.0, 33.0], [10400.0, 83.0], [10500.0, 79.0], [10300.0, 1.0], [10600.0, 8.0], [11400.0, 241.0], [11300.0, 24.0], [11700.0, 3.0], [11800.0, 75.0], [12000.0, 23.0], [11900.0, 71.0], [12100.0, 2.0], [12200.0, 28.0], [12500.0, 1.0], [12300.0, 9.0], [12400.0, 2.0], [13800.0, 273.0], [13900.0, 26.0], [15800.0, 182.0], [15900.0, 112.0], [16000.0, 6.0]], "isOverall": false, "label": "有redis", "isController": false}], "supportsControllersDiscrimination": true, "granularity": 100, "maxX": 16000.0, "title": "Response Time Distribution"}},
        getOptions: function() {
            var granularity = this.data.result.granularity;
            return {
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendResponseTimeDistribution'
                },
                xaxis:{
                    axisLabel: "Response times in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Number of responses",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                bars : {
                    show: true,
                    barWidth: this.data.result.granularity
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: function(label, xval, yval, flotItem){
                        return yval + " responses for " + label + " were between " + xval + " and " + (xval + granularity) + " ms";
                    }
                }
            };
        },
        createGraph: function() {
            var data = this.data;
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotResponseTimeDistribution"), prepareData(data.result.series, $("#choicesResponseTimeDistribution")), options);
        }

};

// Response time distribution
function refreshResponseTimeDistribution() {
    var infos = responseTimeDistributionInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyResponseTimeDistribution");
        return;
    }
    if (isGraph($("#flotResponseTimeDistribution"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesResponseTimeDistribution");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        $('#footerResponseTimeDistribution .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};


var syntheticResponseTimeDistributionInfos = {
        data: {"result": {"minY": 170.0, "minX": 0.0, "ticks": [[0, "Requests having \nresponse time <= 500ms"], [1, "Requests having \nresponse time > 500ms and <= 1,500ms"], [2, "Requests having \nresponse time > 1,500ms"], [3, "Requests in error"]], "maxY": 146726.0, "series": [{"data": [[0.0, 146726.0]], "color": "#9ACD32", "isOverall": false, "label": "Requests having \nresponse time <= 500ms", "isController": false}, {"data": [[1.0, 7921.0]], "color": "yellow", "isOverall": false, "label": "Requests having \nresponse time > 500ms and <= 1,500ms", "isController": false}, {"data": [[2.0, 26154.0]], "color": "orange", "isOverall": false, "label": "Requests having \nresponse time > 1,500ms", "isController": false}, {"data": [[3.0, 170.0]], "color": "#FF6347", "isOverall": false, "label": "Requests in error", "isController": false}], "supportsControllersDiscrimination": false, "maxX": 3.0, "title": "Synthetic Response Times Distribution"}},
        getOptions: function() {
            return {
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendSyntheticResponseTimeDistribution'
                },
                xaxis:{
                    axisLabel: "Response times ranges",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                    tickLength:0,
                    min:-0.5,
                    max:3.5
                },
                yaxis: {
                    axisLabel: "Number of responses",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                bars : {
                    show: true,
                    align: "center",
                    barWidth: 0.25,
                    fill:.75
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: function(label, xval, yval, flotItem){
                        return yval + " " + label;
                    }
                }
            };
        },
        createGraph: function() {
            var data = this.data;
            var options = this.getOptions();
            prepareOptions(options, data);
            options.xaxis.ticks = data.result.ticks;
            $.plot($("#flotSyntheticResponseTimeDistribution"), prepareData(data.result.series, $("#choicesSyntheticResponseTimeDistribution")), options);
        }

};

// Response time distribution
function refreshSyntheticResponseTimeDistribution() {
    var infos = syntheticResponseTimeDistributionInfos;
    prepareSeries(infos.data, true);
    if (isGraph($("#flotSyntheticResponseTimeDistribution"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesSyntheticResponseTimeDistribution");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        $('#footerSyntheticResponseTimeDistribution .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var activeThreadsOverTimeInfos = {
        data: {"result": {"minY": 200.89689071787794, "minX": 1.7141445E12, "maxY": 500.0, "series": [{"data": [[1.71414486E12, 500.0], [1.7141445E12, 326.00422015122206], [1.7141451E12, 500.0], [1.7141448E12, 490.60777999613805], [1.71414498E12, 483.40198464706947], [1.71414492E12, 500.0], [1.71414564E12, 331.0458015267178], [1.71414552E12, 200.89689071787794], [1.71414522E12, 403.7673379613719], [1.71414468E12, 474.3851525174565], [1.71414558E12, 500.0], [1.71414576E12, 487.31853281853256], [1.71414516E12, 500.0], [1.71414774E12, 345.7488610478357]], "isOverall": false, "label": "线程组", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 60000, "maxX": 1.71414774E12, "title": "Active Threads Over Time"}},
        getOptions: function() {
            return {
                series: {
                    stack: true,
                    lines: {
                        show: true,
                        fill: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Number of active threads",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20
                },
                legend: {
                    noColumns: 6,
                    show: true,
                    container: '#legendActiveThreadsOverTime'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                selection: {
                    mode: 'xy'
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s : At %x there were %y active threads"
                }
            };
        },
        createGraph: function() {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesActiveThreadsOverTime"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotActiveThreadsOverTime"), dataset, options);
            // setup overview
            $.plot($("#overviewActiveThreadsOverTime"), dataset, prepareOverviewOptions(options));
        }
};

// Active Threads Over Time
function refreshActiveThreadsOverTime(fixTimestamps) {
    var infos = activeThreadsOverTimeInfos;
    prepareSeries(infos.data);
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 28800000);
    }
    if(isGraph($("#flotActiveThreadsOverTime"))) {
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesActiveThreadsOverTime");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotActiveThreadsOverTime", "#overviewActiveThreadsOverTime");
        $('#footerActiveThreadsOverTime .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var timeVsThreadsInfos = {
        data: {"result": {"minY": 0.8888888888888888, "minX": 1.0, "maxY": 12543.0, "series": [{"data": [[2.0, 13.0], [5.0, 280.375], [6.0, 427.0], [7.0, 15.0], [8.0, 4.637681159420292], [9.0, 2.2500000000000004], [10.0, 3.7857142857142856], [11.0, 21.060606060606055], [12.0, 3.0], [13.0, 24.0], [14.0, 23.333333333333336], [15.0, 12.849816849816849], [16.0, 9.493598862019907], [18.0, 37.5], [19.0, 58.5], [20.0, 6.44314868804665], [25.0, 78.0], [26.0, 79.0], [27.0, 79.0], [28.0, 73.0], [29.0, 78.0], [30.0, 53.0], [31.0, 74.0], [33.0, 64.25], [32.0, 75.0], [35.0, 5.9595959595959584], [34.0, 69.5], [37.0, 24.96551724137931], [36.0, 10.551201011378005], [39.0, 15.0], [38.0, 17.299999999999997], [41.0, 12.0], [40.0, 20.285714285714285], [43.0, 2.0], [42.0, 3.0], [45.0, 27.833333333333332], [44.0, 36.0], [47.0, 18.0], [46.0, 20.0], [48.0, 6.777777777777777], [51.0, 16.333333333333336], [50.0, 2.0], [53.0, 2.0], [52.0, 69.0], [54.0, 23.700000000000003], [55.0, 24.0], [57.0, 31.6], [56.0, 20.384615384615387], [59.0, 14.4], [58.0, 16.0], [63.0, 45.5], [65.0, 73.0], [64.0, 33.15], [69.0, 72.0], [75.0, 28.0], [74.0, 38.0], [73.0, 46.0], [79.0, 32.0], [78.0, 27.5], [77.0, 73.0], [81.0, 12529.777777777777], [83.0, 23.0], [80.0, 5676.5], [84.0, 32.0], [86.0, 8936.0], [89.0, 69.5], [99.0, 31.0], [103.0, 83.83333333333334], [102.0, 44.3], [101.0, 51.36363636363637], [100.0, 3.0], [107.0, 57.54545454545454], [106.0, 69.89473684210526], [105.0, 164.93181818181822], [104.0, 75.88888888888889], [111.0, 190.88157894736844], [110.0, 131.33333333333334], [109.0, 41.5], [108.0, 147.33333333333334], [115.0, 1073.070921985815], [112.0, 531.3351955307257], [113.0, 878.9748427672959], [114.0, 1973.4615384615386], [119.0, 6141.909090909091], [117.0, 579.1739130434784], [116.0, 105.67213114754101], [118.0, 3392.2857142857147], [122.0, 593.1071428571429], [121.0, 892.0714285714286], [120.0, 12543.0], [123.0, 7498.0], [127.0, 542.8571428571429], [124.0, 28.375], [126.0, 18.999999999999996], [125.0, 161.0], [135.0, 873.4285714285716], [133.0, 4830.666666666666], [132.0, 1576.0], [131.0, 1888.0], [129.0, 1441.0], [128.0, 6210.0], [134.0, 42.6], [143.0, 366.68750000000006], [141.0, 5696.0], [138.0, 542.8333333333333], [137.0, 7706.333333333333], [136.0, 7827.0], [139.0, 44.0], [140.0, 24.0], [142.0, 23.333333333333332], [150.0, 690.6666666666666], [149.0, 984.5714285714286], [148.0, 900.75], [147.0, 450.65000000000003], [146.0, 1401.304347826087], [144.0, 845.1363636363637], [145.0, 2768.0], [151.0, 316.0], [159.0, 1795.5], [156.0, 2274.75], [153.0, 1157.2], [152.0, 504.5454545454547], [154.0, 12469.0], [158.0, 2958.0], [157.0, 1940.3333333333335], [167.0, 2795.0], [165.0, 1537.0], [163.0, 4371.0], [162.0, 3906.5], [161.0, 2751.0], [160.0, 3332.5], [166.0, 4305.0], [164.0, 3154.0], [175.0, 2741.0], [174.0, 2747.0], [173.0, 3999.0], [172.0, 2751.0], [170.0, 1422.269230769231], [169.0, 2822.0], [168.0, 2156.0], [171.0, 342.0], [183.0, 2727.0], [182.0, 2728.0], [181.0, 1905.7142857142858], [178.0, 2734.0], [177.0, 3517.75], [180.0, 2736.6], [176.0, 2277.6111111111113], [191.0, 3157.0], [190.0, 2752.0], [189.0, 5445.0], [188.0, 3198.5], [187.0, 2628.4], [186.0, 5042.0], [185.0, 3860.0], [184.0, 3160.0], [196.0, 1379.888888888889], [195.0, 539.7499999999999], [194.0, 1015.6666666666665], [192.0, 919.0], [199.0, 6993.545454545454], [198.0, 4959.0], [197.0, 2910.0], [193.0, 3595.5], [207.0, 9399.8], [200.0, 11296.8], [205.0, 792.5], [203.0, 436.5], [202.0, 20.0], [201.0, 11.0], [215.0, 2068.970588235294], [214.0, 10182.333333333332], [213.0, 9607.14705882353], [211.0, 12445.93333333333], [212.0, 1758.3333333333335], [210.0, 2796.0], [209.0, 2951.6666666666665], [208.0, 13.666666666666666], [223.0, 2605.5555555555557], [218.0, 1357.75], [217.0, 7831.5], [216.0, 1109.25], [222.0, 12446.0], [221.0, 6995.125], [219.0, 12442.5], [220.0, 3579.0], [231.0, 3267.0], [230.0, 7207.6], [229.0, 3856.5], [228.0, 5333.5], [227.0, 4118.500000000001], [225.0, 1656.6666666666665], [224.0, 3950.6666666666665], [239.0, 1402.5], [238.0, 9100.16363636364], [236.0, 1676.6666666666667], [234.0, 2153.6666666666665], [237.0, 2593.0], [235.0, 3559.0], [233.0, 248.24999999999994], [232.0, 1267.6666666666665], [247.0, 4013.5], [246.0, 2541.0], [245.0, 5856.25], [244.0, 2475.6823529411768], [242.0, 1630.2105263157891], [240.0, 6640.833333333333], [241.0, 4658.162162162161], [243.0, 6687.8], [255.0, 1629.8666666666668], [254.0, 2576.0], [253.0, 5687.333333333334], [251.0, 4969.625], [249.0, 5885.75], [248.0, 4778.0], [252.0, 3383.166666666667], [250.0, 6564.625], [258.0, 1454.142857142857], [271.0, 1880.25], [265.0, 1914.75], [264.0, 2308.0], [267.0, 644.0], [266.0, 2044.0], [270.0, 3091.6666666666665], [269.0, 1434.3333333333335], [268.0, 1724.6], [259.0, 4127.0], [263.0, 892.75], [262.0, 1293.4], [260.0, 1861.5], [257.0, 1588.75], [256.0, 1077.0000000000002], [274.0, 5237.75], [287.0, 5954.166666666667], [286.0, 3387.923076923076], [284.0, 2294.75], [285.0, 4546.8], [275.0, 3402.000000000001], [283.0, 1654.0000000000002], [281.0, 3986.25], [280.0, 5145.0], [277.0, 2703.0], [276.0, 1522.3333333333333], [272.0, 3121.857142857143], [278.0, 4529.75], [273.0, 11540.666666666666], [303.0, 7356.0], [298.0, 2613.3333333333335], [299.0, 6012.0], [296.0, 10303.294117647061], [297.0, 8646.0], [293.0, 2608.25], [292.0, 8670.666666666666], [295.0, 8666.0], [294.0, 4897.0], [290.0, 2606.0], [289.0, 6180.5], [288.0, 1329.6666666666665], [301.0, 8771.0], [300.0, 8594.0], [291.0, 8593.0], [306.0, 2599.0], [315.0, 4305.090909090909], [314.0, 8510.0], [313.0, 4280.5], [309.0, 1085.095238095238], [308.0, 2373.0], [307.0, 6665.714285714285], [317.0, 7877.5], [316.0, 8716.5], [305.0, 3384.111111111111], [304.0, 1732.5], [310.0, 2658.25], [311.0, 3351.3333333333335], [319.0, 3072.666666666667], [312.0, 8502.0], [318.0, 8534.0], [332.0, 5721.0], [334.0, 5723.75], [335.0, 4231.2], [328.0, 7278.0], [331.0, 6817.0], [330.0, 3495.8], [320.0, 6054.888888888889], [327.0, 7255.666666666667], [321.0, 8555.0], [322.0, 9765.2962962963], [333.0, 492.0], [326.0, 8504.25], [325.0, 8803.0], [324.0, 8375.2], [349.0, 6291.8], [338.0, 5378.888888888889], [346.0, 537.0], [343.0, 4840.0], [342.0, 7463.333333333333], [337.0, 3474.0], [336.0, 8621.0], [351.0, 8598.0], [350.0, 242.0], [344.0, 7317.0], [345.0, 221.5], [347.0, 7928.111111111113], [340.0, 8840.666666666666], [354.0, 1351.3913043478262], [353.0, 1545.5430463576158], [352.0, 3556.3333333333335], [366.0, 6898.666666666667], [364.0, 3299.0], [365.0, 8656.0], [362.0, 8070.3], [363.0, 8625.0], [361.0, 4141.5], [360.0, 3470.0], [359.0, 1985.0], [358.0, 1876.3333333333335], [357.0, 8955.0], [356.0, 3023.666666666667], [380.0, 1325.0], [383.0, 586.7142857142856], [379.0, 1838.5], [382.0, 3771.8899999999994], [381.0, 1108.65564738292], [377.0, 3300.0], [376.0, 406.2], [375.0, 3300.0], [368.0, 8655.0], [374.0, 4297.5], [372.0, 3379.0], [373.0, 410.6666666666667], [371.0, 4063.0], [370.0, 3463.0], [384.0, 601.875], [399.0, 222.42857142857142], [397.0, 588.1764705882352], [390.0, 421.0], [402.0, 251.49999999999994], [403.0, 157.99999999999997], [401.0, 444.57142857142856], [400.0, 6764.448275862069], [409.0, 2437.0], [410.0, 2.0], [404.0, 12.0], [406.0, 37.0], [413.0, 6968.64], [408.0, 5615.666666666667], [411.0, 7267.5], [430.0, 11.666666666666668], [416.0, 2286.2], [425.0, 585.5], [431.0, 921.5952380952381], [427.0, 771.0], [426.0, 951.0], [423.0, 699.0], [422.0, 806.5], [420.0, 723.3333333333334], [421.0, 828.0], [440.0, 58.0], [443.0, 41.0], [434.0, 516.0], [437.0, 17.0], [445.0, 47.0], [438.0, 27.0], [433.0, 13.0], [462.0, 358.4782608695652], [455.0, 309.0], [451.0, 1012.0], [459.0, 43.0], [460.0, 4281.928571428572], [461.0, 43.24999999999999], [463.0, 95.24309392265192], [457.0, 6360.166666666666], [458.0, 7210.0], [454.0, 6701.102564102564], [453.0, 1016.0], [477.0, 1078.5], [465.0, 5744.0], [471.0, 3112.5], [474.0, 4642.5], [476.0, 6148.0], [466.0, 6189.4], [475.0, 6147.25], [473.0, 6161.333333333333], [472.0, 6163.5], [470.0, 7178.285714285714], [468.0, 7165.0], [482.0, 595.8901098901099], [494.0, 2242.678571428572], [491.0, 3009.782608695652], [483.0, 236.41744548286616], [484.0, 1202.857142857143], [485.0, 6126.0], [487.0, 6108.0], [481.0, 6132.0], [480.0, 6161.333333333333], [486.0, 6133.0], [488.0, 143.66666666666669], [492.0, 87.75], [493.0, 1979.25], [489.0, 6113.5], [497.0, 2108.874999999999], [500.0, 722.2560696892434], [499.0, 1563.6923076923076], [496.0, 1877.7999999999993], [498.0, 116.65853658536582], [1.0, 1.4117647058823533]], "isOverall": false, "label": "无redis", "isController": false}, {"data": [[474.26542401013296, 812.2862477887533]], "isOverall": false, "label": "无redis-Aggregated", "isController": false}, {"data": [[4.0, 15.0], [7.0, 11.0], [8.0, 30.41772151898735], [9.0, 3.375], [10.0, 1.3571428571428572], [11.0, 4.434782608695652], [13.0, 61.0], [14.0, 2.75], [15.0, 4.794676806083651], [16.0, 7.5207439198855575], [20.0, 6.285285285285287], [21.0, 31.68181818181818], [22.0, 55.0], [23.0, 82.0], [24.0, 55.0], [27.0, 52.666666666666664], [29.0, 48.0], [35.0, 4.096491228070175], [37.0, 20.756756756756754], [36.0, 5.455145118733501], [39.0, 10.0], [38.0, 7.0], [41.0, 33.33333333333333], [40.0, 24.102564102564102], [43.0, 24.666666666666664], [42.0, 91.33333333333333], [45.0, 41.875], [44.0, 11.0], [47.0, 19.0], [46.0, 17.0], [48.0, 11.389312977099241], [49.0, 17.0], [50.0, 85.6], [51.0, 15.0], [53.0, 91.0], [52.0, 90.0], [55.0, 23.333333333333332], [54.0, 39.33333333333333], [56.0, 36.0], [57.0, 53.5], [58.0, 20.666666666666668], [59.0, 90.66666666666667], [60.0, 17.0], [61.0, 91.0], [62.0, 92.0], [63.0, 65.0], [64.0, 90.22222222222223], [66.0, 49.5], [71.0, 78.0], [70.0, 76.0], [69.0, 90.33333333333333], [74.0, 31.0], [73.0, 66.0], [72.0, 50.0], [86.0, 47.0], [85.0, 63.0], [89.0, 55.333333333333336], [88.0, 70.0], [92.0, 40.83333333333333], [98.0, 62.4], [97.0, 65.89285714285717], [99.0, 60.5], [102.0, 40.24], [103.0, 39.333333333333336], [101.0, 52.5], [100.0, 34.0], [106.0, 60.0], [111.0, 7.666666666666667], [115.0, 29.414814814814818], [114.0, 61.32000000000001], [113.0, 5.878980891719743], [112.0, 4.128048780487806], [116.0, 99.72727272727275], [119.0, 281.17241379310354], [117.0, 51.714285714285715], [118.0, 8751.0], [122.0, 149.0], [123.0, 423.0], [121.0, 284.1428571428571], [127.0, 32.26666666666668], [126.0, 1318.7142857142858], [125.0, 82.5], [124.0, 256.5], [135.0, 2711.5714285714284], [134.0, 353.8], [132.0, 1713.5], [130.0, 185.5], [129.0, 367.5], [128.0, 332.2727272727273], [131.0, 28.666666666666664], [133.0, 4.0], [143.0, 102.3448275862069], [142.0, 125.2], [141.0, 328.0], [140.0, 383.0], [139.0, 390.6666666666667], [138.0, 376.0], [137.0, 1236.6666666666665], [150.0, 22.5], [149.0, 45.333333333333336], [147.0, 1701.6666666666667], [146.0, 1599.2857142857142], [148.0, 9.0], [151.0, 8.0], [153.0, 1723.6875000000002], [152.0, 85.17307692307693], [159.0, 243.0], [156.0, 2279.0], [155.0, 295.0], [154.0, 149.0], [158.0, 5.0], [161.0, 5.2], [164.0, 25.666666666666668], [171.0, 5114.25], [170.0, 3169.8645833333326], [169.0, 74.0], [183.0, 167.5], [181.0, 166.0], [180.0, 161.25], [177.0, 163.85714285714286], [176.0, 131.71428571428572], [184.0, 170.0], [199.0, 8411.58620689655], [198.0, 168.0], [197.0, 50.0], [194.0, 38.8], [195.0, 8.416666666666668], [204.0, 2981.666666666667], [203.0, 168.0], [202.0, 1522.8333333333333], [207.0, 8695.5], [205.0, 8745.0], [201.0, 5814.333333333334], [215.0, 8686.0], [213.0, 971.4444444444445], [212.0, 4374.5], [211.0, 8694.0], [210.0, 4354.5], [209.0, 5855.333333333333], [208.0, 12.6], [223.0, 8677.0], [219.0, 8686.0], [218.0, 8658.0], [217.0, 8674.0], [216.0, 8678.5], [220.0, 165.0], [229.0, 8687.0], [228.0, 8676.0], [227.0, 8663.0], [225.0, 8659.0], [224.0, 4341.5], [238.0, 3425.5172413793107], [239.0, 12302.0], [235.0, 8680.8], [232.0, 8715.0], [236.0, 93.0], [233.0, 1067.2777777777778], [247.0, 614.8000000000001], [246.0, 2521.285714285714], [245.0, 6169.25], [240.0, 12310.25], [243.0, 6569.538116591928], [244.0, 3789.5], [255.0, 2783.0], [254.0, 66.0], [253.0, 5101.5], [252.0, 3573.1111111111113], [251.0, 5796.333333333333], [248.0, 6136.5], [250.0, 9813.5], [249.0, 7631.4], [270.0, 7387.0], [268.0, 8031.5], [264.0, 3654.3333333333335], [271.0, 3239.0], [265.0, 3768.5], [263.0, 7413.8], [262.0, 7372.0], [261.0, 7364.0], [260.0, 5561.0], [257.0, 6215.0], [259.0, 7390.666666666667], [256.0, 8648.0], [269.0, 7362.0], [267.0, 7356.0], [266.0, 7372.0], [273.0, 10096.75], [283.0, 6718.0], [277.0, 5014.0], [276.0, 2618.0], [285.0, 8164.300000000001], [280.0, 7340.0], [278.0, 7363.0], [279.0, 3770.0], [275.0, 7397.666666666667], [274.0, 7372.5], [299.0, 2621.0], [297.0, 2605.0], [296.0, 11592.071428571428], [290.0, 2608.0], [291.0, 8706.0], [294.0, 3298.0], [295.0, 3553.0], [313.0, 2618.0], [319.0, 3707.0], [318.0, 3666.0], [317.0, 3708.0], [310.0, 3672.0], [334.0, 2169.5], [330.0, 10.5], [323.0, 3682.0], [331.0, 3704.0], [343.0, 3277.0], [350.0, 73.0], [364.0, 2518.0], [367.0, 2652.5], [366.0, 2680.0], [365.0, 2646.75], [362.0, 5594.0], [358.0, 922.6666666666667], [357.0, 2556.0714285714284], [356.0, 5153.333333333333], [354.0, 8609.0], [353.0, 8606.0], [371.0, 3846.0], [382.0, 2511.0], [383.0, 602.013888888889], [376.0, 3139.8125], [381.0, 2677.5], [379.0, 2675.0], [377.0, 2994.0], [374.0, 2754.9090909090905], [372.0, 2670.0], [370.0, 5210.333333333333], [369.0, 8563.0], [368.0, 4642.2], [373.0, 641.2948717948718], [398.0, 2661.0], [395.0, 7366.5], [394.0, 2656.0], [393.0, 2672.1666666666665], [399.0, 306.5], [388.0, 2522.0], [390.0, 3397.0], [387.0, 2671.0], [397.0, 548.4444444444445], [386.0, 2668.0], [385.0, 1386.0], [384.0, 589.2337398373988], [400.0, 2651.75], [411.0, 2613.25], [410.0, 1.0], [408.0, 2616.0], [407.0, 2625.6666666666665], [406.0, 2630.0], [405.0, 2362.9999999999995], [404.0, 819.0], [403.0, 118.99999999999999], [415.0, 783.0], [414.0, 3361.0], [412.0, 2080.0], [402.0, 58.66666666666667], [401.0, 263.8], [422.0, 2047.0], [420.0, 3616.125], [428.0, 829.0], [431.0, 2813.222222222222], [424.0, 798.0], [416.0, 655.0], [425.0, 829.0], [421.0, 3364.5], [445.0, 66.14285714285714], [443.0, 126.39999999999999], [440.0, 2067.0], [441.0, 605.0], [444.0, 23.08], [435.0, 735.3333333333334], [434.0, 407.5], [442.0, 3450.0], [437.0, 9.0], [433.0, 3408.0], [451.0, 2029.0], [448.0, 693.0], [456.0, 3280.965517241379], [453.0, 1731.0], [452.0, 800.0], [455.0, 3326.473372781066], [459.0, 285.6666666666667], [458.0, 3275.052631578947], [457.0, 3279.326530612245], [449.0, 290.0], [461.0, 549.3333333333334], [462.0, 47.52258064516129], [463.0, 39.05882352941177], [476.0, 2918.75], [465.0, 3248.5454545454545], [479.0, 5396.954545454545], [478.0, 5362.88888888889], [477.0, 4624.986666666667], [473.0, 5715.818181818182], [475.0, 3195.6666666666665], [472.0, 10039.927710843376], [471.0, 5638.3125], [469.0, 126.0], [470.0, 3269.8571428571427], [464.0, 130.71428571428567], [467.0, 41.0], [466.0, 123.8], [492.0, 45.0], [480.0, 2406.6000000000004], [481.0, 2574.5], [484.0, 5229.031249999997], [485.0, 2538.0], [487.0, 1409.5], [486.0, 2721.0], [488.0, 786.5714285714286], [490.0, 2627.25], [489.0, 2607.0], [494.0, 52.0], [493.0, 822.0], [495.0, 52.0], [482.0, 308.4], [483.0, 62.14516129032259], [500.0, 859.6263336536849], [499.0, 5200.526315789473], [496.0, 54.07142857142857], [497.0, 57.0], [498.0, 71.29268292682927], [1.0, 0.8888888888888888]], "isOverall": false, "label": "有redis", "isController": false}, {"data": [[476.81616010202015, 907.697269361141]], "isOverall": false, "label": "有redis-Aggregated", "isController": false}], "supportsControllersDiscrimination": true, "maxX": 500.0, "title": "Time VS Threads"}},
        getOptions: function() {
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    axisLabel: "Number of active threads",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Average response times in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20
                },
                legend: { noColumns: 2,show: true, container: '#legendTimeVsThreads' },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s: At %x.2 active threads, Average response time was %y.2 ms"
                }
            };
        },
        createGraph: function() {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesTimeVsThreads"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotTimesVsThreads"), dataset, options);
            // setup overview
            $.plot($("#overviewTimesVsThreads"), dataset, prepareOverviewOptions(options));
        }
};

// Time vs threads
function refreshTimeVsThreads(){
    var infos = timeVsThreadsInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyTimeVsThreads");
        return;
    }
    if(isGraph($("#flotTimesVsThreads"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesTimeVsThreads");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotTimesVsThreads", "#overviewTimesVsThreads");
        $('#footerTimeVsThreads .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var bytesThroughputOverTimeInfos = {
        data : {"result": {"minY": 2728.35, "minX": 1.7141445E12, "maxY": 334885.73333333334, "series": [{"data": [[1.71414486E12, 218242.28333333333], [1.7141445E12, 30053.15], [1.7141451E12, 52557.53333333333], [1.7141448E12, 83069.71666666666], [1.71414498E12, 27802.716666666667], [1.71414492E12, 174807.36666666667], [1.71414564E12, 2728.35], [1.71414552E12, 22760.933333333334], [1.71414522E12, 75754.28333333334], [1.71414468E12, 14157.583333333334], [1.71414558E12, 10944.916666666666], [1.71414576E12, 26960.383333333335], [1.71414516E12, 199705.68333333332], [1.71414774E12, 9129.916666666666]], "isOverall": false, "label": "Bytes received per second", "isController": false}, {"data": [[1.71414486E12, 334885.73333333334], [1.7141445E12, 45623.73333333333], [1.7141451E12, 81087.1], [1.7141448E12, 124102.6], [1.71414498E12, 42932.666666666664], [1.71414492E12, 268835.06666666665], [1.71414564E12, 4207.033333333334], [1.71414552E12, 35165.7], [1.71414522E12, 116671.83333333333], [1.71414468E12, 21923.6], [1.71414558E12, 16970.566666666666], [1.71414576E12, 41671.23333333333], [1.71414516E12, 302142.4666666667], [1.71414774E12, 13211.8]], "isOverall": false, "label": "Bytes sent per second", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 60000, "maxX": 1.71414774E12, "title": "Bytes Throughput Over Time"}},
        getOptions : function(){
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity) ,
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Bytes / sec",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendBytesThroughputOverTime'
                },
                selection: {
                    mode: "xy"
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s at %x was %y"
                }
            };
        },
        createGraph : function() {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesBytesThroughputOverTime"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotBytesThroughputOverTime"), dataset, options);
            // setup overview
            $.plot($("#overviewBytesThroughputOverTime"), dataset, prepareOverviewOptions(options));
        }
};

// Bytes throughput Over Time
function refreshBytesThroughputOverTime(fixTimestamps) {
    var infos = bytesThroughputOverTimeInfos;
    prepareSeries(infos.data);
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 28800000);
    }
    if(isGraph($("#flotBytesThroughputOverTime"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesBytesThroughputOverTime");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotBytesThroughputOverTime", "#overviewBytesThroughputOverTime");
        $('#footerBytesThroughputOverTime .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
}

var responseTimesOverTimeInfos = {
        data: {"result": {"minY": 226.70010672358578, "minX": 1.7141445E12, "maxY": 6768.933085501856, "series": [{"data": [[1.71414486E12, 675.6662673120281], [1.7141445E12, 981.230537921817], [1.7141451E12, 585.5313935681469], [1.7141448E12, 1212.17115749526], [1.71414498E12, 1772.9896391568395], [1.71414492E12, 670.0259841108652], [1.71414564E12, 6768.933085501856], [1.71414552E12, 1237.1270117442327], [1.71414522E12, 663.1411973756137], [1.71414468E12, 1359.8846931894816], [1.71414558E12, 853.9477292202214], [1.71414576E12, 1621.4078516902969], [1.71414516E12, 549.9648460352067], [1.71414774E12, 1248.4703433923003]], "isOverall": false, "label": "无redis", "isController": false}, {"data": [[1.71414486E12, 699.8109528815822], [1.7141445E12, 679.227542687453], [1.7141451E12, 759.1155820160113], [1.7141448E12, 810.7873261611126], [1.71414498E12, 1268.3863099921323], [1.71414492E12, 794.3485714285674], [1.71414564E12, 6664.799999999997], [1.71414552E12, 1071.865060240964], [1.71414522E12, 715.4616341766911], [1.71414468E12, 2404.409531502424], [1.71414558E12, 226.70010672358578], [1.71414576E12, 1126.695347879786], [1.71414516E12, 1137.2163258853275], [1.71414774E12, 2033.606289308177]], "isOverall": false, "label": "有redis", "isController": false}], "supportsControllersDiscrimination": true, "granularity": 60000, "maxX": 1.71414774E12, "title": "Response Time Over Time"}},
        getOptions: function(){
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Average response time in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendResponseTimesOverTime'
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s : at %x Average response time was %y ms"
                }
            };
        },
        createGraph: function() {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesResponseTimesOverTime"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotResponseTimesOverTime"), dataset, options);
            // setup overview
            $.plot($("#overviewResponseTimesOverTime"), dataset, prepareOverviewOptions(options));
        }
};

// Response Times Over Time
function refreshResponseTimeOverTime(fixTimestamps) {
    var infos = responseTimesOverTimeInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyResponseTimeOverTime");
        return;
    }
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 28800000);
    }
    if(isGraph($("#flotResponseTimesOverTime"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesResponseTimesOverTime");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotResponseTimesOverTime", "#overviewResponseTimesOverTime");
        $('#footerResponseTimesOverTime .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var latenciesOverTimeInfos = {
        data: {"result": {"minY": 212.06937033084316, "minX": 1.7141445E12, "maxY": 6767.940520446097, "series": [{"data": [[1.71414486E12, 667.5089375569052], [1.7141445E12, 896.0240561309715], [1.7141451E12, 568.795941807045], [1.7141448E12, 1184.3907653383935], [1.71414498E12, 1742.5784208645948], [1.71414492E12, 668.9296338331064], [1.71414564E12, 6767.940520446097], [1.71414552E12, 1218.9943453675498], [1.71414522E12, 662.5709404045921], [1.71414468E12, 1225.617666891436], [1.71414558E12, 749.4010282776342], [1.71414576E12, 1576.0352599054868], [1.71414516E12, 539.4639685156604], [1.71414774E12, 1236.4255983350674]], "isOverall": false, "label": "无redis", "isController": false}, {"data": [[1.71414486E12, 671.4194781611411], [1.7141445E12, 671.5731254639938], [1.7141451E12, 704.8406897967569], [1.7141448E12, 778.4618210443462], [1.71414498E12, 1247.968922108576], [1.71414492E12, 762.3324404761937], [1.71414564E12, 6663.070588235295], [1.71414552E12, 1058.6183132530134], [1.71414522E12, 692.4790543343], [1.71414468E12, 2395.03634894992], [1.71414558E12, 212.06937033084316], [1.71414576E12, 1118.9040757513376], [1.71414516E12, 1114.3347913153575], [1.71414774E12, 2033.0691823899363]], "isOverall": false, "label": "有redis", "isController": false}], "supportsControllersDiscrimination": true, "granularity": 60000, "maxX": 1.71414774E12, "title": "Latencies Over Time"}},
        getOptions: function() {
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Average response latencies in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendLatenciesOverTime'
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s : at %x Average latency was %y ms"
                }
            };
        },
        createGraph: function () {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesLatenciesOverTime"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotLatenciesOverTime"), dataset, options);
            // setup overview
            $.plot($("#overviewLatenciesOverTime"), dataset, prepareOverviewOptions(options));
        }
};

// Latencies Over Time
function refreshLatenciesOverTime(fixTimestamps) {
    var infos = latenciesOverTimeInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyLatenciesOverTime");
        return;
    }
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 28800000);
    }
    if(isGraph($("#flotLatenciesOverTime"))) {
        infos.createGraph();
    }else {
        var choiceContainer = $("#choicesLatenciesOverTime");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotLatenciesOverTime", "#overviewLatenciesOverTime");
        $('#footerLatenciesOverTime .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var connectTimeOverTimeInfos = {
        data: {"result": {"minY": 0.0, "minX": 1.7141445E12, "maxY": 723.8283038501548, "series": [{"data": [[1.71414486E12, 2.2860497436143197], [1.7141445E12, 89.72034747744713], [1.7141451E12, 97.51607963246605], [1.7141448E12, 23.58013915243523], [1.71414498E12, 251.52911754198004], [1.71414492E12, 1.558389582462215], [1.71414564E12, 0.0], [1.71414552E12, 114.94214876033054], [1.71414522E12, 0.0035538545653362487], [1.71414468E12, 184.0552933243426], [1.71414558E12, 380.4944301628105], [1.71414576E12, 223.70410759723677], [1.71414516E12, 4.993192575652811], [1.71414774E12, 723.8283038501548]], "isOverall": false, "label": "无redis", "isController": false}, {"data": [[1.71414486E12, 1.622144700372731], [1.7141445E12, 1.8110616184112827], [1.7141451E12, 0.0], [1.7141448E12, 3.2654159013382227], [1.71414498E12, 0.0], [1.71414492E12, 0.11267857142857118], [1.71414564E12, 0.0], [1.71414552E12, 0.0], [1.71414522E12, 0.002765104382690452], [1.71414468E12, 0.0], [1.71414558E12, 0.0], [1.71414576E12, 0.0], [1.71414516E12, 1.7565345699831314], [1.71414774E12, 0.0]], "isOverall": false, "label": "有redis", "isController": false}], "supportsControllersDiscrimination": true, "granularity": 60000, "maxX": 1.71414774E12, "title": "Connect Time Over Time"}},
        getOptions: function() {
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getConnectTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Average Connect Time in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendConnectTimeOverTime'
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s : at %x Average connect time was %y ms"
                }
            };
        },
        createGraph: function () {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesConnectTimeOverTime"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotConnectTimeOverTime"), dataset, options);
            // setup overview
            $.plot($("#overviewConnectTimeOverTime"), dataset, prepareOverviewOptions(options));
        }
};

// Connect Time Over Time
function refreshConnectTimeOverTime(fixTimestamps) {
    var infos = connectTimeOverTimeInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyConnectTimeOverTime");
        return;
    }
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 28800000);
    }
    if(isGraph($("#flotConnectTimeOverTime"))) {
        infos.createGraph();
    }else {
        var choiceContainer = $("#choicesConnectTimeOverTime");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotConnectTimeOverTime", "#overviewConnectTimeOverTime");
        $('#footerConnectTimeOverTime .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var responseTimePercentilesOverTimeInfos = {
        data: {"result": {"minY": 0.0, "minX": 1.7141445E12, "maxY": 16026.0, "series": [{"data": [[1.71414486E12, 11736.0], [1.7141445E12, 3885.0], [1.7141451E12, 6638.0], [1.7141448E12, 8474.0], [1.71414498E12, 13122.0], [1.71414492E12, 9181.0], [1.71414564E12, 7574.0], [1.71414552E12, 9398.0], [1.71414522E12, 8319.0], [1.71414468E12, 6485.0], [1.71414558E12, 5009.0], [1.71414576E12, 11336.0], [1.71414516E12, 16026.0], [1.71414774E12, 3805.0]], "isOverall": false, "label": "Max", "isController": false}, {"data": [[1.71414486E12, 0.0], [1.7141445E12, 1.0], [1.7141451E12, 0.0], [1.7141448E12, 0.0], [1.71414498E12, 1.0], [1.71414492E12, 0.0], [1.71414564E12, 1332.0], [1.71414552E12, 1.0], [1.71414522E12, 0.0], [1.71414468E12, 1.0], [1.71414558E12, 0.0], [1.71414576E12, 1.0], [1.71414516E12, 0.0], [1.71414774E12, 1.0]], "isOverall": false, "label": "Min", "isController": false}, {"data": [[1.71414486E12, 1247.0], [1.7141445E12, 2773.4000000000005], [1.7141451E12, 2009.0], [1.7141448E12, 3721.0], [1.71414498E12, 2790.0], [1.71414492E12, 3290.9000000000015], [1.71414564E12, 7441.5], [1.71414552E12, 8133.5], [1.71414522E12, 3322.0], [1.71414468E12, 5698.0], [1.71414558E12, 1888.0], [1.71414576E12, 2455.7000000000016], [1.71414516E12, 1594.9000000000015], [1.71414774E12, 3321.3]], "isOverall": false, "label": "90th percentile", "isController": false}, {"data": [[1.71414486E12, 7947.990000000002], [1.7141445E12, 3591.0], [1.7141451E12, 6279.0], [1.7141448E12, 8040.3099999999995], [1.71414498E12, 12494.0], [1.71414492E12, 8489.0], [1.71414564E12, 7506.75], [1.71414552E12, 8769.25], [1.71414522E12, 8156.0], [1.71414468E12, 6388.9000000000015], [1.71414558E12, 4960.0], [1.71414576E12, 11175.189999999999], [1.71414516E12, 8397.0], [1.71414774E12, 3684.29]], "isOverall": false, "label": "99th percentile", "isController": false}, {"data": [[1.71414486E12, 104.0], [1.7141445E12, 266.0], [1.7141451E12, 143.0], [1.7141448E12, 218.0], [1.71414498E12, 279.0], [1.71414492E12, 95.0], [1.71414564E12, 7284.0], [1.71414552E12, 33.0], [1.71414522E12, 90.0], [1.71414468E12, 878.0], [1.71414558E12, 216.0], [1.71414576E12, 204.0], [1.71414516E12, 116.0], [1.71414774E12, 1950.5]], "isOverall": false, "label": "Median", "isController": false}, {"data": [[1.71414486E12, 5838.950000000001], [1.7141445E12, 3315.0], [1.7141451E12, 6104.0], [1.7141448E12, 5256.549999999999], [1.71414498E12, 12257.8], [1.71414492E12, 5070.9000000000015], [1.71414564E12, 7458.0], [1.71414552E12, 8674.0], [1.71414522E12, 4792.0], [1.71414468E12, 6178.9], [1.71414558E12, 1943.75], [1.71414576E12, 10449.95], [1.71414516E12, 3894.4000000001834], [1.71414774E12, 3450.0]], "isOverall": false, "label": "95th percentile", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 60000, "maxX": 1.71414774E12, "title": "Response Time Percentiles Over Time (successful requests only)"}},
        getOptions: function() {
            return {
                series: {
                    lines: {
                        show: true,
                        fill: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Response Time in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendResponseTimePercentilesOverTime'
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s : at %x Response time was %y ms"
                }
            };
        },
        createGraph: function () {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesResponseTimePercentilesOverTime"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotResponseTimePercentilesOverTime"), dataset, options);
            // setup overview
            $.plot($("#overviewResponseTimePercentilesOverTime"), dataset, prepareOverviewOptions(options));
        }
};

// Response Time Percentiles Over Time
function refreshResponseTimePercentilesOverTime(fixTimestamps) {
    var infos = responseTimePercentilesOverTimeInfos;
    prepareSeries(infos.data);
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 28800000);
    }
    if(isGraph($("#flotResponseTimePercentilesOverTime"))) {
        infos.createGraph();
    }else {
        var choiceContainer = $("#choicesResponseTimePercentilesOverTime");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotResponseTimePercentilesOverTime", "#overviewResponseTimePercentilesOverTime");
        $('#footerResponseTimePercentilesOverTime .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};


var responseTimeVsRequestInfos = {
    data: {"result": {"minY": 4.0, "minX": 1.0, "maxY": 15856.0, "series": [{"data": [[2.0, 3244.0], [3.0, 4881.0], [4.0, 3823.0], [6.0, 2014.5], [7.0, 1216.5], [8.0, 1395.5], [12.0, 1348.5], [13.0, 306.0], [15.0, 6117.0], [19.0, 5160.0], [23.0, 4966.0], [26.0, 6086.0], [27.0, 3883.0], [40.0, 2429.0], [46.0, 5132.0], [52.0, 2136.0], [55.0, 259.0], [54.0, 6124.0], [65.0, 8515.0], [69.0, 1961.0], [71.0, 5271.0], [68.0, 49.5], [76.0, 2545.5], [117.0, 5814.0], [126.0, 2119.5], [125.0, 10472.0], [129.0, 6219.0], [141.0, 3580.0], [148.0, 2808.0], [152.0, 1779.0], [160.0, 1194.5], [163.0, 3353.0], [175.0, 13839.0], [180.0, 6106.0], [188.0, 3987.0], [190.0, 937.0], [186.0, 537.5], [194.0, 1022.0], [199.0, 2512.5], [198.0, 2955.5], [197.0, 4592.5], [196.0, 2587.0], [192.0, 2415.5], [200.0, 3227.5], [203.0, 6055.0], [202.0, 3385.0], [223.0, 1710.0], [224.0, 5615.0], [245.0, 6183.0], [256.0, 1349.0], [263.0, 1543.0], [273.0, 676.0], [295.0, 5340.0], [296.0, 2204.5], [319.0, 5684.0], [314.0, 6264.0], [345.0, 476.0], [362.0, 72.0], [382.0, 1266.5], [375.0, 9020.0], [460.0, 2181.5], [472.0, 12298.5], [470.0, 7355.5], [491.0, 244.0], [488.0, 2078.0], [485.0, 4127.0], [500.0, 2096.5], [511.0, 1788.0], [503.0, 3277.0], [538.0, 5963.0], [533.0, 15856.0], [542.0, 47.0], [524.0, 244.5], [608.0, 123.5], [633.0, 248.0], [623.0, 2857.0], [615.0, 83.0], [672.0, 2066.0], [694.0, 270.0], [677.0, 28.0], [728.0, 69.0], [708.0, 127.0], [799.0, 4578.0], [904.0, 4589.0], [995.0, 281.0], [1013.0, 213.0], [1064.0, 72.0], [1028.0, 169.0], [1134.0, 64.0], [1185.0, 251.0], [1289.0, 77.0], [1374.0, 4.0], [1414.0, 238.5], [1438.0, 17.0], [1534.0, 307.0], [1482.0, 227.0], [1549.0, 76.0], [1555.0, 66.0], [1537.0, 179.0], [1599.0, 105.0], [1589.0, 484.0], [1627.0, 171.0], [1616.0, 131.0], [1633.0, 110.0], [1692.0, 197.0], [1687.0, 194.0], [1709.0, 178.0], [1688.0, 118.0], [1748.0, 123.0], [1878.0, 9.5], [1892.0, 133.0], [1910.0, 81.0], [1927.0, 124.0], [2016.0, 269.5], [2060.0, 181.5], [2126.0, 145.0], [2245.0, 146.0], [2349.0, 99.0], [2428.0, 218.0], [2348.0, 103.0], [2500.0, 89.0], [2510.0, 93.0], [2671.0, 86.0], [2583.0, 88.0], [2692.0, 148.0], [2750.0, 92.0], [2782.0, 105.0], [2935.0, 127.0], [2875.0, 139.0], [2987.0, 106.0], [3054.0, 6.0], [3146.0, 133.0], [3126.0, 115.0], [3135.0, 121.0], [3229.0, 121.0], [3401.0, 99.0], [3420.0, 119.0], [3341.0, 74.0], [3617.0, 95.0], [3631.0, 95.0], [3742.0, 96.0], [3879.0, 113.0], [3852.0, 93.0], [3968.0, 107.0], [4176.0, 81.0], [4482.0, 95.0], [4599.0, 92.0], [4798.0, 103.0], [1.0, 2038.5]], "isOverall": false, "label": "Successes", "isController": false}, {"data": [[256.0, 574.0], [5.0, 426.0], [12.0, 909.5], [1589.0, 524.0], [3135.0, 754.5], [202.0, 33.0], [1687.0, 228.0]], "isOverall": false, "label": "Failures", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 1000, "maxX": 4798.0, "title": "Response Time Vs Request"}},
    getOptions: function() {
        return {
            series: {
                lines: {
                    show: false
                },
                points: {
                    show: true
                }
            },
            xaxis: {
                axisLabel: "Global number of requests per second",
                axisLabelUseCanvas: true,
                axisLabelFontSizePixels: 12,
                axisLabelFontFamily: 'Verdana, Arial',
                axisLabelPadding: 20,
            },
            yaxis: {
                axisLabel: "Median Response Time in ms",
                axisLabelUseCanvas: true,
                axisLabelFontSizePixels: 12,
                axisLabelFontFamily: 'Verdana, Arial',
                axisLabelPadding: 20,
            },
            legend: {
                noColumns: 2,
                show: true,
                container: '#legendResponseTimeVsRequest'
            },
            selection: {
                mode: 'xy'
            },
            grid: {
                hoverable: true // IMPORTANT! this is needed for tooltip to work
            },
            tooltip: true,
            tooltipOpts: {
                content: "%s : Median response time at %x req/s was %y ms"
            },
            colors: ["#9ACD32", "#FF6347"]
        };
    },
    createGraph: function () {
        var data = this.data;
        var dataset = prepareData(data.result.series, $("#choicesResponseTimeVsRequest"));
        var options = this.getOptions();
        prepareOptions(options, data);
        $.plot($("#flotResponseTimeVsRequest"), dataset, options);
        // setup overview
        $.plot($("#overviewResponseTimeVsRequest"), dataset, prepareOverviewOptions(options));

    }
};

// Response Time vs Request
function refreshResponseTimeVsRequest() {
    var infos = responseTimeVsRequestInfos;
    prepareSeries(infos.data);
    if (isGraph($("#flotResponseTimeVsRequest"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesResponseTimeVsRequest");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotResponseTimeVsRequest", "#overviewResponseTimeVsRequest");
        $('#footerResponseRimeVsRequest .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};


var latenciesVsRequestInfos = {
    data: {"result": {"minY": 0.0, "minX": 1.0, "maxY": 15856.0, "series": [{"data": [[2.0, 3244.0], [3.0, 3932.0], [4.0, 3823.0], [6.0, 2009.5], [7.0, 895.5], [8.0, 933.0], [12.0, 1345.5], [13.0, 291.0], [15.0, 6116.0], [19.0, 5150.0], [23.0, 4215.0], [26.0, 6086.0], [27.0, 3478.0], [40.0, 2360.0], [46.0, 5130.0], [52.0, 2136.0], [55.0, 259.0], [54.0, 6121.5], [65.0, 8514.0], [69.0, 1961.0], [71.0, 5271.0], [68.0, 44.0], [76.0, 2545.5], [117.0, 5814.0], [126.0, 2119.0], [125.0, 10452.0], [129.0, 6219.0], [141.0, 3575.0], [148.0, 2807.5], [152.0, 1778.5], [160.0, 1194.5], [163.0, 3349.0], [175.0, 13839.0], [180.0, 6106.0], [188.0, 3021.0], [190.0, 937.0], [186.0, 427.0], [194.0, 1008.0], [199.0, 1978.0], [198.0, 2577.5], [197.0, 3640.0], [196.0, 2026.0], [192.0, 2415.5], [200.0, 2569.5], [203.0, 5639.5], [202.0, 2492.0], [223.0, 1710.0], [224.0, 5614.0], [245.0, 6182.0], [256.0, 922.0], [263.0, 1301.0], [273.0, 639.0], [295.0, 5339.0], [296.0, 2016.0], [319.0, 5682.0], [314.0, 6264.0], [345.0, 421.0], [362.0, 72.0], [382.0, 1146.5], [375.0, 9020.0], [460.0, 2162.5], [472.0, 12298.0], [470.0, 7351.5], [491.0, 235.0], [488.0, 2050.0], [485.0, 4126.0], [500.0, 1545.0], [511.0, 1527.0], [503.0, 3276.0], [538.0, 5919.5], [533.0, 15856.0], [542.0, 47.0], [524.0, 233.5], [608.0, 122.0], [633.0, 248.0], [623.0, 2857.0], [615.0, 83.0], [672.0, 2044.0], [694.0, 246.5], [677.0, 27.0], [728.0, 69.0], [708.0, 125.0], [799.0, 4351.0], [904.0, 4589.0], [995.0, 280.0], [1013.0, 198.0], [1064.0, 72.0], [1028.0, 168.0], [1134.0, 62.0], [1185.0, 251.0], [1289.0, 77.0], [1374.0, 4.0], [1414.0, 237.5], [1438.0, 17.0], [1534.0, 304.0], [1482.0, 227.0], [1549.0, 76.0], [1555.0, 66.0], [1537.0, 171.0], [1599.0, 96.0], [1589.0, 379.0], [1627.0, 171.0], [1616.0, 130.5], [1633.0, 110.0], [1692.0, 190.0], [1687.0, 194.0], [1709.0, 154.0], [1688.0, 115.0], [1748.0, 123.0], [1878.0, 9.0], [1892.0, 133.0], [1910.0, 81.0], [1927.0, 103.0], [2016.0, 268.5], [2060.0, 181.5], [2126.0, 145.0], [2245.0, 126.0], [2349.0, 99.0], [2428.0, 217.0], [2348.0, 103.0], [2500.0, 88.0], [2510.0, 93.0], [2671.0, 86.0], [2583.0, 87.0], [2692.0, 147.0], [2750.0, 91.0], [2782.0, 105.0], [2935.0, 123.0], [2875.0, 139.0], [2987.0, 96.0], [3054.0, 6.0], [3146.0, 133.0], [3126.0, 115.0], [3135.0, 120.0], [3229.0, 121.0], [3401.0, 99.0], [3420.0, 119.0], [3341.0, 74.0], [3617.0, 95.0], [3631.0, 95.0], [3742.0, 95.0], [3879.0, 113.0], [3852.0, 90.0], [3968.0, 107.0], [4176.0, 81.0], [4482.0, 95.0], [4599.0, 92.0], [4798.0, 103.0], [1.0, 993.5]], "isOverall": false, "label": "Successes", "isController": false}, {"data": [[256.0, 0.0], [5.0, 0.0], [12.0, 0.0], [1589.0, 0.0], [3135.0, 0.0], [202.0, 0.0], [1687.0, 0.0]], "isOverall": false, "label": "Failures", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 1000, "maxX": 4798.0, "title": "Latencies Vs Request"}},
    getOptions: function() {
        return{
            series: {
                lines: {
                    show: false
                },
                points: {
                    show: true
                }
            },
            xaxis: {
                axisLabel: "Global number of requests per second",
                axisLabelUseCanvas: true,
                axisLabelFontSizePixels: 12,
                axisLabelFontFamily: 'Verdana, Arial',
                axisLabelPadding: 20,
            },
            yaxis: {
                axisLabel: "Median Latency in ms",
                axisLabelUseCanvas: true,
                axisLabelFontSizePixels: 12,
                axisLabelFontFamily: 'Verdana, Arial',
                axisLabelPadding: 20,
            },
            legend: { noColumns: 2,show: true, container: '#legendLatencyVsRequest' },
            selection: {
                mode: 'xy'
            },
            grid: {
                hoverable: true // IMPORTANT! this is needed for tooltip to work
            },
            tooltip: true,
            tooltipOpts: {
                content: "%s : Median Latency time at %x req/s was %y ms"
            },
            colors: ["#9ACD32", "#FF6347"]
        };
    },
    createGraph: function () {
        var data = this.data;
        var dataset = prepareData(data.result.series, $("#choicesLatencyVsRequest"));
        var options = this.getOptions();
        prepareOptions(options, data);
        $.plot($("#flotLatenciesVsRequest"), dataset, options);
        // setup overview
        $.plot($("#overviewLatenciesVsRequest"), dataset, prepareOverviewOptions(options));
    }
};

// Latencies vs Request
function refreshLatenciesVsRequest() {
        var infos = latenciesVsRequestInfos;
        prepareSeries(infos.data);
        if(isGraph($("#flotLatenciesVsRequest"))){
            infos.createGraph();
        }else{
            var choiceContainer = $("#choicesLatencyVsRequest");
            createLegend(choiceContainer, infos);
            infos.createGraph();
            setGraphZoomable("#flotLatenciesVsRequest", "#overviewLatenciesVsRequest");
            $('#footerLatenciesVsRequest .legendColorBox > div').each(function(i){
                $(this).clone().prependTo(choiceContainer.find("li").eq(i));
            });
        }
};

var hitsPerSecondInfos = {
        data: {"result": {"minY": 0.45, "minX": 1.7141445E12, "maxY": 696.55, "series": [{"data": [[1.71414486E12, 696.55], [1.7141445E12, 94.78333333333333], [1.7141451E12, 176.58333333333334], [1.7141448E12, 267.1166666666667], [1.71414498E12, 89.01666666666667], [1.71414492E12, 550.6833333333333], [1.71414564E12, 0.45], [1.71414552E12, 72.9], [1.71414522E12, 234.15], [1.71414468E12, 45.35], [1.71414558E12, 43.35], [1.71414576E12, 86.33333333333333], [1.71414516E12, 629.65], [1.71414774E12, 29.266666666666666]], "isOverall": false, "label": "hitsPerSecond", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 60000, "maxX": 1.71414774E12, "title": "Hits Per Second"}},
        getOptions: function() {
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Number of hits / sec",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: "#legendHitsPerSecond"
                },
                selection: {
                    mode : 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s at %x was %y.2 hits/sec"
                }
            };
        },
        createGraph: function createGraph() {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesHitsPerSecond"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotHitsPerSecond"), dataset, options);
            // setup overview
            $.plot($("#overviewHitsPerSecond"), dataset, prepareOverviewOptions(options));
        }
};

// Hits per second
function refreshHitsPerSecond(fixTimestamps) {
    var infos = hitsPerSecondInfos;
    prepareSeries(infos.data);
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 28800000);
    }
    if (isGraph($("#flotHitsPerSecond"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesHitsPerSecond");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotHitsPerSecond", "#overviewHitsPerSecond");
        $('#footerHitsPerSecond .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
}

var codesPerSecondInfos = {
        data: {"result": {"minY": 0.05, "minX": 1.7141445E12, "maxY": 696.2833333333333, "series": [{"data": [[1.71414486E12, 696.2833333333333], [1.7141445E12, 94.58333333333333], [1.7141451E12, 168.25], [1.7141448E12, 257.8], [1.71414498E12, 89.01666666666667], [1.71414492E12, 558.9666666666667], [1.71414564E12, 8.733333333333333], [1.71414552E12, 72.9], [1.71414522E12, 242.48333333333332], [1.71414468E12, 45.35], [1.71414558E12, 35.06666666666667], [1.71414576E12, 86.33333333333333], [1.71414516E12, 628.3166666666667], [1.71414774E12, 29.266666666666666]], "isOverall": false, "label": "200", "isController": false}, {"data": [[1.71414486E12, 0.26666666666666666], [1.7141445E12, 0.2], [1.7141448E12, 0.9833333333333333], [1.71414492E12, 0.05], [1.71414516E12, 1.3333333333333333]], "isOverall": false, "label": "Non HTTP response code: java.net.SocketException", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 60000, "maxX": 1.71414774E12, "title": "Codes Per Second"}},
        getOptions: function(){
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Number of responses / sec",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: "#legendCodesPerSecond"
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "Number of Response Codes %s at %x was %y.2 responses / sec"
                }
            };
        },
    createGraph: function() {
        var data = this.data;
        var dataset = prepareData(data.result.series, $("#choicesCodesPerSecond"));
        var options = this.getOptions();
        prepareOptions(options, data);
        $.plot($("#flotCodesPerSecond"), dataset, options);
        // setup overview
        $.plot($("#overviewCodesPerSecond"), dataset, prepareOverviewOptions(options));
    }
};

// Codes per second
function refreshCodesPerSecond(fixTimestamps) {
    var infos = codesPerSecondInfos;
    prepareSeries(infos.data);
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 28800000);
    }
    if(isGraph($("#flotCodesPerSecond"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesCodesPerSecond");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotCodesPerSecond", "#overviewCodesPerSecond");
        $('#footerCodesPerSecond .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var transactionsPerSecondInfos = {
        data: {"result": {"minY": 0.05, "minX": 1.7141445E12, "maxY": 348.6333333333333, "series": [{"data": [[1.71414486E12, 0.13333333333333333], [1.71414516E12, 0.6666666666666666]], "isOverall": false, "label": "有redis-failure", "isController": false}, {"data": [[1.71414486E12, 0.13333333333333333], [1.7141445E12, 0.2], [1.7141448E12, 0.9833333333333333], [1.71414492E12, 0.05], [1.71414516E12, 0.6666666666666666]], "isOverall": false, "label": "无redis-failure", "isController": false}, {"data": [[1.71414486E12, 347.65], [1.7141445E12, 49.68333333333333], [1.7141451E12, 87.06666666666666], [1.7141448E12, 130.76666666666668], [1.71414498E12, 46.65], [1.71414492E12, 278.96666666666664], [1.71414564E12, 4.483333333333333], [1.71414552E12, 38.31666666666667], [1.71414522E12, 121.93333333333334], [1.71414468E12, 24.716666666666665], [1.71414558E12, 19.45], [1.71414576E12, 45.85], [1.71414516E12, 312.71666666666664], [1.71414774E12, 16.016666666666666]], "isOverall": false, "label": "无redis-success", "isController": false}, {"data": [[1.71414486E12, 348.6333333333333], [1.7141445E12, 44.9], [1.7141451E12, 81.18333333333334], [1.7141448E12, 127.03333333333333], [1.71414498E12, 42.36666666666667], [1.71414492E12, 280.0], [1.71414564E12, 4.25], [1.71414552E12, 34.583333333333336], [1.71414522E12, 120.55], [1.71414468E12, 20.633333333333333], [1.71414558E12, 15.616666666666667], [1.71414576E12, 40.483333333333334], [1.71414516E12, 315.6], [1.71414774E12, 13.25]], "isOverall": false, "label": "有redis-success", "isController": false}], "supportsControllersDiscrimination": true, "granularity": 60000, "maxX": 1.71414774E12, "title": "Transactions Per Second"}},
        getOptions: function(){
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Number of transactions / sec",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: "#legendTransactionsPerSecond"
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s at %x was %y transactions / sec"
                }
            };
        },
    createGraph: function () {
        var data = this.data;
        var dataset = prepareData(data.result.series, $("#choicesTransactionsPerSecond"));
        var options = this.getOptions();
        prepareOptions(options, data);
        $.plot($("#flotTransactionsPerSecond"), dataset, options);
        // setup overview
        $.plot($("#overviewTransactionsPerSecond"), dataset, prepareOverviewOptions(options));
    }
};

// Transactions per second
function refreshTransactionsPerSecond(fixTimestamps) {
    var infos = transactionsPerSecondInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyTransactionsPerSecond");
        return;
    }
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 28800000);
    }
    if(isGraph($("#flotTransactionsPerSecond"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesTransactionsPerSecond");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotTransactionsPerSecond", "#overviewTransactionsPerSecond");
        $('#footerTransactionsPerSecond .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var totalTPSInfos = {
        data: {"result": {"minY": 0.05, "minX": 1.7141445E12, "maxY": 696.2833333333333, "series": [{"data": [[1.71414486E12, 696.2833333333333], [1.7141445E12, 94.58333333333333], [1.7141451E12, 168.25], [1.7141448E12, 257.8], [1.71414498E12, 89.01666666666667], [1.71414492E12, 558.9666666666667], [1.71414564E12, 8.733333333333333], [1.71414552E12, 72.9], [1.71414522E12, 242.48333333333332], [1.71414468E12, 45.35], [1.71414558E12, 35.06666666666667], [1.71414576E12, 86.33333333333333], [1.71414516E12, 628.3166666666667], [1.71414774E12, 29.266666666666666]], "isOverall": false, "label": "Transaction-success", "isController": false}, {"data": [[1.71414486E12, 0.26666666666666666], [1.7141445E12, 0.2], [1.7141448E12, 0.9833333333333333], [1.71414492E12, 0.05], [1.71414516E12, 1.3333333333333333]], "isOverall": false, "label": "Transaction-failure", "isController": false}], "supportsControllersDiscrimination": true, "granularity": 60000, "maxX": 1.71414774E12, "title": "Total Transactions Per Second"}},
        getOptions: function(){
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Number of transactions / sec",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: "#legendTotalTPS"
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s at %x was %y transactions / sec"
                },
                colors: ["#9ACD32", "#FF6347"]
            };
        },
    createGraph: function () {
        var data = this.data;
        var dataset = prepareData(data.result.series, $("#choicesTotalTPS"));
        var options = this.getOptions();
        prepareOptions(options, data);
        $.plot($("#flotTotalTPS"), dataset, options);
        // setup overview
        $.plot($("#overviewTotalTPS"), dataset, prepareOverviewOptions(options));
    }
};

// Total Transactions per second
function refreshTotalTPS(fixTimestamps) {
    var infos = totalTPSInfos;
    // We want to ignore seriesFilter
    prepareSeries(infos.data, false, true);
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 28800000);
    }
    if(isGraph($("#flotTotalTPS"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesTotalTPS");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotTotalTPS", "#overviewTotalTPS");
        $('#footerTotalTPS .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

// Collapse the graph matching the specified DOM element depending the collapsed
// status
function collapse(elem, collapsed){
    if(collapsed){
        $(elem).parent().find(".fa-chevron-up").removeClass("fa-chevron-up").addClass("fa-chevron-down");
    } else {
        $(elem).parent().find(".fa-chevron-down").removeClass("fa-chevron-down").addClass("fa-chevron-up");
        if (elem.id == "bodyBytesThroughputOverTime") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshBytesThroughputOverTime(true);
            }
            document.location.href="#bytesThroughputOverTime";
        } else if (elem.id == "bodyLatenciesOverTime") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshLatenciesOverTime(true);
            }
            document.location.href="#latenciesOverTime";
        } else if (elem.id == "bodyCustomGraph") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshCustomGraph(true);
            }
            document.location.href="#responseCustomGraph";
        } else if (elem.id == "bodyConnectTimeOverTime") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshConnectTimeOverTime(true);
            }
            document.location.href="#connectTimeOverTime";
        } else if (elem.id == "bodyResponseTimePercentilesOverTime") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshResponseTimePercentilesOverTime(true);
            }
            document.location.href="#responseTimePercentilesOverTime";
        } else if (elem.id == "bodyResponseTimeDistribution") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshResponseTimeDistribution();
            }
            document.location.href="#responseTimeDistribution" ;
        } else if (elem.id == "bodySyntheticResponseTimeDistribution") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshSyntheticResponseTimeDistribution();
            }
            document.location.href="#syntheticResponseTimeDistribution" ;
        } else if (elem.id == "bodyActiveThreadsOverTime") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshActiveThreadsOverTime(true);
            }
            document.location.href="#activeThreadsOverTime";
        } else if (elem.id == "bodyTimeVsThreads") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshTimeVsThreads();
            }
            document.location.href="#timeVsThreads" ;
        } else if (elem.id == "bodyCodesPerSecond") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshCodesPerSecond(true);
            }
            document.location.href="#codesPerSecond";
        } else if (elem.id == "bodyTransactionsPerSecond") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshTransactionsPerSecond(true);
            }
            document.location.href="#transactionsPerSecond";
        } else if (elem.id == "bodyTotalTPS") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshTotalTPS(true);
            }
            document.location.href="#totalTPS";
        } else if (elem.id == "bodyResponseTimeVsRequest") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshResponseTimeVsRequest();
            }
            document.location.href="#responseTimeVsRequest";
        } else if (elem.id == "bodyLatenciesVsRequest") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshLatenciesVsRequest();
            }
            document.location.href="#latencyVsRequest";
        }
    }
}

/*
 * Activates or deactivates all series of the specified graph (represented by id parameter)
 * depending on checked argument.
 */
function toggleAll(id, checked){
    var placeholder = document.getElementById(id);

    var cases = $(placeholder).find(':checkbox');
    cases.prop('checked', checked);
    $(cases).parent().children().children().toggleClass("legend-disabled", !checked);

    var choiceContainer;
    if ( id == "choicesBytesThroughputOverTime"){
        choiceContainer = $("#choicesBytesThroughputOverTime");
        refreshBytesThroughputOverTime(false);
    } else if(id == "choicesResponseTimesOverTime"){
        choiceContainer = $("#choicesResponseTimesOverTime");
        refreshResponseTimeOverTime(false);
    }else if(id == "choicesResponseCustomGraph"){
        choiceContainer = $("#choicesResponseCustomGraph");
        refreshCustomGraph(false);
    } else if ( id == "choicesLatenciesOverTime"){
        choiceContainer = $("#choicesLatenciesOverTime");
        refreshLatenciesOverTime(false);
    } else if ( id == "choicesConnectTimeOverTime"){
        choiceContainer = $("#choicesConnectTimeOverTime");
        refreshConnectTimeOverTime(false);
    } else if ( id == "choicesResponseTimePercentilesOverTime"){
        choiceContainer = $("#choicesResponseTimePercentilesOverTime");
        refreshResponseTimePercentilesOverTime(false);
    } else if ( id == "choicesResponseTimePercentiles"){
        choiceContainer = $("#choicesResponseTimePercentiles");
        refreshResponseTimePercentiles();
    } else if(id == "choicesActiveThreadsOverTime"){
        choiceContainer = $("#choicesActiveThreadsOverTime");
        refreshActiveThreadsOverTime(false);
    } else if ( id == "choicesTimeVsThreads"){
        choiceContainer = $("#choicesTimeVsThreads");
        refreshTimeVsThreads();
    } else if ( id == "choicesSyntheticResponseTimeDistribution"){
        choiceContainer = $("#choicesSyntheticResponseTimeDistribution");
        refreshSyntheticResponseTimeDistribution();
    } else if ( id == "choicesResponseTimeDistribution"){
        choiceContainer = $("#choicesResponseTimeDistribution");
        refreshResponseTimeDistribution();
    } else if ( id == "choicesHitsPerSecond"){
        choiceContainer = $("#choicesHitsPerSecond");
        refreshHitsPerSecond(false);
    } else if(id == "choicesCodesPerSecond"){
        choiceContainer = $("#choicesCodesPerSecond");
        refreshCodesPerSecond(false);
    } else if ( id == "choicesTransactionsPerSecond"){
        choiceContainer = $("#choicesTransactionsPerSecond");
        refreshTransactionsPerSecond(false);
    } else if ( id == "choicesTotalTPS"){
        choiceContainer = $("#choicesTotalTPS");
        refreshTotalTPS(false);
    } else if ( id == "choicesResponseTimeVsRequest"){
        choiceContainer = $("#choicesResponseTimeVsRequest");
        refreshResponseTimeVsRequest();
    } else if ( id == "choicesLatencyVsRequest"){
        choiceContainer = $("#choicesLatencyVsRequest");
        refreshLatenciesVsRequest();
    }
    var color = checked ? "black" : "#818181";
    if(choiceContainer != null) {
        choiceContainer.find("label").each(function(){
            this.style.color = color;
        });
    }
}

